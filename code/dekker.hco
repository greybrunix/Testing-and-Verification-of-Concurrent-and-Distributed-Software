{
  "nstates": 248,
  "issue": "Active busy waiting",
  "hvm": {
    "modules": {
        "__main__": {
            "file": "dekker.hny",
            "lines": [
                "#critical reached?",
                "crit=0",
                "sequential wants, turn, counter",
                "wants = (False, False)",
                "turn = 0",
                "",
                "def dekk p_q:",
                "	# while True:",
                "	while choose {False, True} :",
                "	# non critical",
                "		wants p_q = True",
                "		# can enter critical section",
                "		while wants (1 - p_q):",
                "			if turn == (1 - p_q):",
                "				wants p_q = False",
                "#await turn == p_q",
                "				wants p_q = True",
                "		# enter critical section",
                "		atomically crit +=1",
                "		print(\"entrou\", p_q);",
                "		# critical",
                "		# leaving critical",
                "		atomically crit -=1",
                "		print(\"saiu\", p_q);",
                "		turn = 1 - p_q",
                "		wants p_q = False",
                "		# post protocol",
                "",
                "spawn dekk 0",
                "spawn dekk 1"
              ],
            "identifiers": {
                "dekk": "constant",
                "wants": "global",
                "this": "local-var",
                "turn": "global",
                "p_q": "local-const",
                "counter": "global",
                "___": "___",
                "crit": "global"
              }
          }
      },
    "labels": {
        "__end__": 103
      },
    "pretty": [
        [
            "Frame __init__()",
            "start of method __init__"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Store crit",
            "pop a value and store it in shared variable crit"
          ],
        [
            "Push ?wants",
            "push constant ?wants"
          ],
        [
            "Sequential",
            "sequential consistency for variable on top of stack"
          ],
        [
            "Push ?turn",
            "push constant ?turn"
          ],
        [
            "Sequential",
            "sequential consistency for variable on top of stack"
          ],
        [
            "Push ?counter",
            "push constant ?counter"
          ],
        [
            "Sequential",
            "sequential consistency for variable on top of stack"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "Push False",
            "push constant False"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Push False",
            "push constant False"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Store wants",
            "pop a value and store it in shared variable wants"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Store turn",
            "pop a value and store it in shared variable turn"
          ],
        [
            "Jump 91",
            "jump over method definition: set program counter to 91"
          ],
        [
            "Frame dekk(p_q)",
            "start of method dekk"
          ],
        [
            "Push {}",
            "push constant {}"
          ],
        [
            "Push False",
            "push constant False"
          ],
        [
            "2-ary SetAdd",
            "pop 2 values and push the result of applying SetAdd"
          ],
        [
            "Push True",
            "push constant True"
          ],
        [
            "2-ary SetAdd",
            "pop 2 values and push the result of applying SetAdd"
          ],
        [
            "Choose",
            "pop a set value and push one of its elements"
          ],
        [
            "JumpCond False 89",
            "pop a value and jump to 89 if the value is False"
          ],
        [
            "Push ?wants",
            "push constant ?wants"
          ],
        [
            "LoadVar p_q",
            "push the value of p_q"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Push True",
            "push constant True"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "Push ?wants",
            "push constant ?wants"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "LoadVar p_q",
            "push the value of p_q"
          ],
        [
            "2-ary -",
            "pop 2 values and push the result of applying -"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "JumpCond False 55",
            "pop a value and jump to 55 if the value is False"
          ],
        [
            "Load turn",
            "push value of shared variable turn"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "LoadVar p_q",
            "push the value of p_q"
          ],
        [
            "2-ary -",
            "pop 2 values and push the result of applying -"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "JumpCond False 31",
            "pop a value and jump to 31 if the value is False"
          ],
        [
            "Push ?wants",
            "push constant ?wants"
          ],
        [
            "LoadVar p_q",
            "push the value of p_q"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Push False",
            "push constant False"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "Push ?wants",
            "push constant ?wants"
          ],
        [
            "LoadVar p_q",
            "push the value of p_q"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Push True",
            "push constant True"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "Jump 31",
            "set program counter to 31"
          ],
        [
            "AtomicInc(eager)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "Load crit",
            "push value of shared variable crit"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary +",
            "pop 2 values and push the result of applying +"
          ],
        [
            "Store crit",
            "pop a value and store it in shared variable crit"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "Push \"entrou\"",
            "push constant \"entrou\""
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar p_q",
            "push the value of p_q"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Print",
            "pop a value and add to print history"
          ],
        [
            "AtomicInc(eager)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "Load crit",
            "push value of shared variable crit"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary -",
            "pop 2 values and push the result of applying -"
          ],
        [
            "Store crit",
            "pop a value and store it in shared variable crit"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "Push \"saiu\"",
            "push constant \"saiu\""
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar p_q",
            "push the value of p_q"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Print",
            "pop a value and add to print history"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "LoadVar p_q",
            "push the value of p_q"
          ],
        [
            "2-ary -",
            "pop 2 values and push the result of applying -"
          ],
        [
            "Store turn",
            "pop a value and store it in shared variable turn"
          ],
        [
            "Push ?wants",
            "push constant ?wants"
          ],
        [
            "LoadVar p_q",
            "push the value of p_q"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Push False",
            "push constant False"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "Jump 19",
            "set program counter to 19"
          ],
        [
            "DelVar p_q",
            "delete method variable p_q"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "Push ?PC(18)",
            "push constant ?PC(18)"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Push {:}",
            "push constant {:}"
          ],
        [
            "Spawn",
            "pop thread-local state, argument, and pc and spawn a new thread"
          ],
        [
            "Push ?PC(18)",
            "push constant ?PC(18)"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Push {:}",
            "push constant {:}"
          ],
        [
            "Spawn",
            "pop thread-local state, argument, and pc and spawn a new thread"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ]
      ],
    "locs": [
        {
            "module": "__main__",
            "endline": 31,
            "stmt": [
                2,
                1,
                31,
                7
              ],
            "line": 2,
            "endcolumn": 7,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 2,
            "stmt": [
                2,
                1,
                2,
                6
              ],
            "line": 2,
            "endcolumn": 6,
            "column": 6
          },
        {
            "module": "__main__",
            "endline": 2,
            "stmt": [
                2,
                1,
                2,
                6
              ],
            "line": 2,
            "endcolumn": 5,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 3,
            "stmt": [
                3,
                1,
                3,
                31
              ],
            "line": 3,
            "endcolumn": 16,
            "column": 12
          },
        {
            "module": "__main__",
            "endline": 3,
            "stmt": [
                3,
                1,
                3,
                31
              ],
            "line": 3,
            "endcolumn": 31,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 3,
            "stmt": [
                3,
                1,
                3,
                31
              ],
            "line": 3,
            "endcolumn": 22,
            "column": 19
          },
        {
            "module": "__main__",
            "endline": 3,
            "stmt": [
                3,
                1,
                3,
                31
              ],
            "line": 3,
            "endcolumn": 31,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 3,
            "stmt": [
                3,
                1,
                3,
                31
              ],
            "line": 3,
            "endcolumn": 31,
            "column": 25
          },
        {
            "module": "__main__",
            "endline": 3,
            "stmt": [
                3,
                1,
                3,
                31
              ],
            "line": 3,
            "endcolumn": 31,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                22
              ],
            "line": 4,
            "endcolumn": 21,
            "column": 10
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                22
              ],
            "line": 4,
            "endcolumn": 14,
            "column": 10
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                22
              ],
            "line": 4,
            "endcolumn": 21,
            "column": 10
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                22
              ],
            "line": 4,
            "endcolumn": 21,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                22
              ],
            "line": 4,
            "endcolumn": 21,
            "column": 10
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                22
              ],
            "line": 4,
            "endcolumn": 7,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 5,
            "stmt": [
                5,
                1,
                5,
                8
              ],
            "line": 5,
            "endcolumn": 8,
            "column": 8
          },
        {
            "module": "__main__",
            "endline": 5,
            "stmt": [
                5,
                1,
                5,
                8
              ],
            "line": 5,
            "endcolumn": 6,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                1,
                7,
                13
              ],
            "line": 7,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                1,
                7,
                13
              ],
            "line": 7,
            "endcolumn": 13,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                2,
                9,
                29
              ],
            "line": 9,
            "endcolumn": 26,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                2,
                9,
                29
              ],
            "line": 9,
            "endcolumn": 20,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                2,
                9,
                29
              ],
            "line": 9,
            "endcolumn": 26,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                2,
                9,
                29
              ],
            "line": 9,
            "endcolumn": 26,
            "column": 23
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                2,
                9,
                29
              ],
            "line": 9,
            "endcolumn": 26,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                2,
                9,
                29
              ],
            "line": 9,
            "endcolumn": 27,
            "column": 8
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                2,
                9,
                29
              ],
            "line": 9,
            "endcolumn": 6,
            "column": 2
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                3,
                11,
                18
              ],
            "line": 11,
            "endcolumn": 7,
            "column": 3
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                3,
                11,
                18
              ],
            "line": 11,
            "endcolumn": 11,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                3,
                11,
                18
              ],
            "line": 11,
            "endcolumn": 11,
            "column": 3
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                3,
                11,
                18
              ],
            "line": 11,
            "endcolumn": 18,
            "column": 15
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                3,
                11,
                18
              ],
            "line": 11,
            "endcolumn": 13,
            "column": 3
          },
        {
            "module": "__main__",
            "endline": 13,
            "stmt": [
                13,
                3,
                13,
                24
              ],
            "line": 13,
            "endcolumn": 23,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 13,
            "stmt": [
                13,
                3,
                13,
                24
              ],
            "line": 13,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 13,
            "stmt": [
                13,
                3,
                13,
                24
              ],
            "line": 13,
            "endcolumn": 22,
            "column": 20
          },
        {
            "module": "__main__",
            "endline": 13,
            "stmt": [
                13,
                3,
                13,
                24
              ],
            "line": 13,
            "endcolumn": 22,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 13,
            "stmt": [
                13,
                3,
                13,
                24
              ],
            "line": 13,
            "endcolumn": 23,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 13,
            "stmt": [
                13,
                3,
                13,
                24
              ],
            "line": 13,
            "endcolumn": 23,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 13,
            "stmt": [
                13,
                3,
                13,
                24
              ],
            "line": 13,
            "endcolumn": 7,
            "column": 3
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                4,
                14,
                24
              ],
            "line": 14,
            "endcolumn": 10,
            "column": 7
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                4,
                14,
                24
              ],
            "line": 14,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                4,
                14,
                24
              ],
            "line": 14,
            "endcolumn": 22,
            "column": 20
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                4,
                14,
                24
              ],
            "line": 14,
            "endcolumn": 22,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                4,
                14,
                24
              ],
            "line": 14,
            "endcolumn": 23,
            "column": 7
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                4,
                14,
                24
              ],
            "line": 14,
            "endcolumn": 5,
            "column": 4
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                5,
                15,
                21
              ],
            "line": 15,
            "endcolumn": 9,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                5,
                15,
                21
              ],
            "line": 15,
            "endcolumn": 13,
            "column": 11
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                5,
                15,
                21
              ],
            "line": 15,
            "endcolumn": 13,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                5,
                15,
                21
              ],
            "line": 15,
            "endcolumn": 21,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                5,
                15,
                21
              ],
            "line": 15,
            "endcolumn": 15,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                20
              ],
            "line": 17,
            "endcolumn": 9,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                20
              ],
            "line": 17,
            "endcolumn": 13,
            "column": 11
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                20
              ],
            "line": 17,
            "endcolumn": 13,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                20
              ],
            "line": 17,
            "endcolumn": 20,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                20
              ],
            "line": 17,
            "endcolumn": 15,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 13,
            "stmt": [
                13,
                3,
                13,
                24
              ],
            "line": 13,
            "endcolumn": 24,
            "column": 3
          },
        {
            "module": "__main__",
            "endline": 19,
            "stmt": [
                19,
                14,
                19,
                21
              ],
            "line": 19,
            "endcolumn": 21,
            "column": 14
          },
        {
            "module": "__main__",
            "endline": 19,
            "stmt": [
                19,
                14,
                19,
                21
              ],
            "line": 19,
            "endcolumn": 21,
            "column": 14
          },
        {
            "module": "__main__",
            "endline": 19,
            "stmt": [
                19,
                14,
                19,
                21
              ],
            "line": 19,
            "endcolumn": 21,
            "column": 21
          },
        {
            "module": "__main__",
            "endline": 19,
            "stmt": [
                19,
                14,
                19,
                21
              ],
            "line": 19,
            "endcolumn": 21,
            "column": 14
          },
        {
            "module": "__main__",
            "endline": 19,
            "stmt": [
                19,
                14,
                19,
                21
              ],
            "line": 19,
            "endcolumn": 20,
            "column": 14
          },
        {
            "module": "__main__",
            "endline": 19,
            "stmt": [
                19,
                14,
                19,
                21
              ],
            "line": 19,
            "endcolumn": 21,
            "column": 14
          },
        {
            "module": "__main__",
            "endline": 20,
            "stmt": [
                20,
                3,
                20,
                22
              ],
            "line": 20,
            "endcolumn": 21,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 20,
            "stmt": [
                20,
                3,
                20,
                22
              ],
            "line": 20,
            "endcolumn": 16,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 20,
            "stmt": [
                20,
                3,
                20,
                22
              ],
            "line": 20,
            "endcolumn": 21,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 20,
            "stmt": [
                20,
                3,
                20,
                22
              ],
            "line": 20,
            "endcolumn": 21,
            "column": 19
          },
        {
            "module": "__main__",
            "endline": 20,
            "stmt": [
                20,
                3,
                20,
                22
              ],
            "line": 20,
            "endcolumn": 21,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 20,
            "stmt": [
                20,
                3,
                20,
                22
              ],
            "line": 20,
            "endcolumn": 22,
            "column": 3
          },
        {
            "module": "__main__",
            "endline": 23,
            "stmt": [
                23,
                14,
                23,
                21
              ],
            "line": 23,
            "endcolumn": 21,
            "column": 14
          },
        {
            "module": "__main__",
            "endline": 23,
            "stmt": [
                23,
                14,
                23,
                21
              ],
            "line": 23,
            "endcolumn": 21,
            "column": 14
          },
        {
            "module": "__main__",
            "endline": 23,
            "stmt": [
                23,
                14,
                23,
                21
              ],
            "line": 23,
            "endcolumn": 21,
            "column": 21
          },
        {
            "module": "__main__",
            "endline": 23,
            "stmt": [
                23,
                14,
                23,
                21
              ],
            "line": 23,
            "endcolumn": 21,
            "column": 14
          },
        {
            "module": "__main__",
            "endline": 23,
            "stmt": [
                23,
                14,
                23,
                21
              ],
            "line": 23,
            "endcolumn": 20,
            "column": 14
          },
        {
            "module": "__main__",
            "endline": 23,
            "stmt": [
                23,
                14,
                23,
                21
              ],
            "line": 23,
            "endcolumn": 21,
            "column": 14
          },
        {
            "module": "__main__",
            "endline": 24,
            "stmt": [
                24,
                3,
                24,
                20
              ],
            "line": 24,
            "endcolumn": 19,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 24,
            "stmt": [
                24,
                3,
                24,
                20
              ],
            "line": 24,
            "endcolumn": 14,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 24,
            "stmt": [
                24,
                3,
                24,
                20
              ],
            "line": 24,
            "endcolumn": 19,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 24,
            "stmt": [
                24,
                3,
                24,
                20
              ],
            "line": 24,
            "endcolumn": 19,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 24,
            "stmt": [
                24,
                3,
                24,
                20
              ],
            "line": 24,
            "endcolumn": 19,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 24,
            "stmt": [
                24,
                3,
                24,
                20
              ],
            "line": 24,
            "endcolumn": 20,
            "column": 3
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                3,
                25,
                16
              ],
            "line": 25,
            "endcolumn": 10,
            "column": 10
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                3,
                25,
                16
              ],
            "line": 25,
            "endcolumn": 16,
            "column": 14
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                3,
                25,
                16
              ],
            "line": 25,
            "endcolumn": 16,
            "column": 10
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                3,
                25,
                16
              ],
            "line": 25,
            "endcolumn": 8,
            "column": 3
          },
        {
            "module": "__main__",
            "endline": 26,
            "stmt": [
                26,
                3,
                26,
                19
              ],
            "line": 26,
            "endcolumn": 7,
            "column": 3
          },
        {
            "module": "__main__",
            "endline": 26,
            "stmt": [
                26,
                3,
                26,
                19
              ],
            "line": 26,
            "endcolumn": 11,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 26,
            "stmt": [
                26,
                3,
                26,
                19
              ],
            "line": 26,
            "endcolumn": 11,
            "column": 3
          },
        {
            "module": "__main__",
            "endline": 26,
            "stmt": [
                26,
                3,
                26,
                19
              ],
            "line": 26,
            "endcolumn": 19,
            "column": 15
          },
        {
            "module": "__main__",
            "endline": 26,
            "stmt": [
                26,
                3,
                26,
                19
              ],
            "line": 26,
            "endcolumn": 13,
            "column": 3
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                2,
                9,
                29
              ],
            "line": 9,
            "endcolumn": 29,
            "column": 2
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                1,
                7,
                13
              ],
            "line": 7,
            "endcolumn": 13,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                1,
                7,
                13
              ],
            "line": 7,
            "endcolumn": 13,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 29,
            "stmt": [
                29,
                1,
                29,
                12
              ],
            "line": 29,
            "endcolumn": 10,
            "column": 7
          },
        {
            "module": "__main__",
            "endline": 29,
            "stmt": [
                29,
                1,
                29,
                12
              ],
            "line": 29,
            "endcolumn": 12,
            "column": 12
          },
        {
            "module": "__main__",
            "endline": 29,
            "stmt": [
                29,
                1,
                29,
                12
              ],
            "line": 29,
            "endcolumn": 12,
            "column": 7
          },
        {
            "module": "__main__",
            "endline": 29,
            "stmt": [
                29,
                1,
                29,
                12
              ],
            "line": 29,
            "endcolumn": 12,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 29,
            "stmt": [
                29,
                1,
                29,
                12
              ],
            "line": 29,
            "endcolumn": 12,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 30,
            "stmt": [
                30,
                1,
                30,
                12
              ],
            "line": 30,
            "endcolumn": 10,
            "column": 7
          },
        {
            "module": "__main__",
            "endline": 30,
            "stmt": [
                30,
                1,
                30,
                12
              ],
            "line": 30,
            "endcolumn": 12,
            "column": 12
          },
        {
            "module": "__main__",
            "endline": 30,
            "stmt": [
                30,
                1,
                30,
                12
              ],
            "line": 30,
            "endcolumn": 12,
            "column": 7
          },
        {
            "module": "__main__",
            "endline": 30,
            "stmt": [
                30,
                1,
                30,
                12
              ],
            "line": 30,
            "endcolumn": 12,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 30,
            "stmt": [
                30,
                1,
                30,
                12
              ],
            "line": 30,
            "endcolumn": 12,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 31,
            "stmt": [
                2,
                1,
                31,
                7
              ],
            "line": 2,
            "endcolumn": 7,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 31,
            "stmt": [
                2,
                1,
                31,
                7
              ],
            "line": 2,
            "endcolumn": 7,
            "column": 1
          }
      ],
    "code": [
        {
            "args": "()",
            "name": "__init__",
            "op": "Frame"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": [
                {
                    "type": "atom",
                    "value": "crit"
                  }
              ],
            "op": "Store"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "wants"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-1"
                  }
              },
            "op": "Push"
          },
        {
            "op": "Sequential"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "turn"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-1"
                  }
              },
            "op": "Push"
          },
        {
            "op": "Sequential"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "counter"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-1"
                  }
              },
            "op": "Push"
          },
        {
            "op": "Sequential"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "bool",
                "value": "False"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "bool",
                "value": "False"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": [
                {
                    "type": "atom",
                    "value": "wants"
                  }
              ],
            "op": "Store"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": [
                {
                    "type": "atom",
                    "value": "turn"
                  }
              ],
            "op": "Store"
          },
        {
            "pc": "91",
            "op": "Jump"
          },
        {
            "args": "p_q",
            "name": "dekk",
            "op": "Frame"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "bool",
                "value": "False"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "SetAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "bool",
                "value": "True"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "SetAdd",
            "op": "Nary"
          },
        {
            "op": "Choose"
          },
        {
            "pc": "89",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "wants"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-1"
                  }
              },
            "op": "Push"
          },
        {
            "value": "p_q",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "bool",
                "value": "True"
              },
            "op": "Push"
          },
        {
            "op": "Store"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "wants"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-1"
                  }
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "value": "p_q",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "-",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "pc": "55",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": [
                {
                    "type": "atom",
                    "value": "turn"
                  }
              ],
            "op": "Load"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "value": "p_q",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "-",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "pc": "31",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "wants"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-1"
                  }
              },
            "op": "Push"
          },
        {
            "value": "p_q",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "bool",
                "value": "False"
              },
            "op": "Push"
          },
        {
            "op": "Store"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "wants"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-1"
                  }
              },
            "op": "Push"
          },
        {
            "value": "p_q",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "bool",
                "value": "True"
              },
            "op": "Push"
          },
        {
            "op": "Store"
          },
        {
            "pc": "31",
            "op": "Jump"
          },
        {
            "lazy": "False",
            "op": "AtomicInc"
          },
        {
            "value": [
                {
                    "type": "atom",
                    "value": "crit"
                  }
              ],
            "op": "Load"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "+",
            "op": "Nary"
          },
        {
            "value": [
                {
                    "type": "atom",
                    "value": "crit"
                  }
              ],
            "op": "Store"
          },
        {
            "op": "AtomicDec"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "atom",
                "value": "entrou"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "p_q",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "op": "Print"
          },
        {
            "lazy": "False",
            "op": "AtomicInc"
          },
        {
            "value": [
                {
                    "type": "atom",
                    "value": "crit"
                  }
              ],
            "op": "Load"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "-",
            "op": "Nary"
          },
        {
            "value": [
                {
                    "type": "atom",
                    "value": "crit"
                  }
              ],
            "op": "Store"
          },
        {
            "op": "AtomicDec"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "atom",
                "value": "saiu"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "p_q",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "op": "Print"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "value": "p_q",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "-",
            "op": "Nary"
          },
        {
            "value": [
                {
                    "type": "atom",
                    "value": "turn"
                  }
              ],
            "op": "Store"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "wants"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-1"
                  }
              },
            "op": "Push"
          },
        {
            "value": "p_q",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "bool",
                "value": "False"
              },
            "op": "Push"
          },
        {
            "op": "Store"
          },
        {
            "pc": "19",
            "op": "Jump"
          },
        {
            "value": "p_q",
            "op": "DelVar"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "value": {
                "type": "address",
                "args": [

                  ],
                "func": {
                    "type": "pc",
                    "value": "18"
                  }
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "dict",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "eternal": "False",
            "op": "Spawn"
          },
        {
            "value": {
                "type": "address",
                "args": [

                  ],
                "func": {
                    "type": "pc",
                    "value": "18"
                  }
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "dict",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "eternal": "False",
            "op": "Spawn"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "value": "result",
            "op": "DelVar"
          }
      ]
  },
  "macrosteps": [
    {
      "id": "1",
      "tid": "0",
      "shared": { },
      "name": "__init__()",
      "context": {
        "tid": "0",
        "hvalue": "5cbb69035c2a",
        "fp": "1",
        "id": "0",
        "name": "__init__()",
        "entry": "0",
        "pc": "0",
        "sp": "1",
        "stack": [{ "type": "list", "value": [] }],
        "trace": [
{"pc": "0","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
        ],
        "atomic": "1",
        "next": { "type": "Frame", "name": "__init__", "args": "()", "value": { "type": "list", "value": [] } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Frame __init__()",
          "explain": "pop argument () and run method \"__init__\"",
          "explain2": { "text": "pop argument () and run method #+", "args": [ { "type": "atom", "value": "__init__" } ] },
          "npc": "1",
          "fp": "1",
          "trace": [
{"pc": "1","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "0"
        },

        {
          "code": "Push 0",
          "explain": "push constant 0",
          "explain2": { "text": "push constant 0", "args": [] },
          "npc": "2",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1"
        },

        {
          "code": "Store crit",
          "explain": "pop value (0) and store into variable crit",
          "explain2": { "text": "pop value (#+) and store into variable #@", "args": [ { "type": "int", "value": "0" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "crit" } ] } ] },
          "shared": { "crit": { "type": "int", "value": "0" } },
          "npc": "3",
          "pop": "1",
          "push": [ ],
          "pc": "2"
        },

        {
          "code": "Push ?wants",
          "explain": "push constant ?wants",
          "explain2": { "text": "push constant ?wants", "args": [] },
          "npc": "4",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" } ] } ],
          "pc": "3"
        },

        {
          "code": "Sequential",
          "explain": "sequential consistency for variable on top of stack",
          "explain2": { "text": "sequential consistency for variable on top of stack", "args": [] },
          "npc": "5",
          "pop": "1",
          "push": [ ],
          "pc": "4"
        },

        {
          "code": "Push ?turn",
          "explain": "push constant ?turn",
          "explain2": { "text": "push constant ?turn", "args": [] },
          "npc": "6",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "turn" } ] } ],
          "pc": "5"
        },

        {
          "code": "Sequential",
          "explain": "sequential consistency for variable on top of stack",
          "explain2": { "text": "sequential consistency for variable on top of stack", "args": [] },
          "npc": "7",
          "pop": "1",
          "push": [ ],
          "pc": "6"
        },

        {
          "code": "Push ?counter",
          "explain": "push constant ?counter",
          "explain2": { "text": "push constant ?counter", "args": [] },
          "npc": "8",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "counter" } ] } ],
          "pc": "7"
        },

        {
          "code": "Sequential",
          "explain": "sequential consistency for variable on top of stack",
          "explain2": { "text": "sequential consistency for variable on top of stack", "args": [] },
          "npc": "9",
          "pop": "1",
          "push": [ ],
          "pc": "8"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "10",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "9"
        },

        {
          "code": "Push False",
          "explain": "push constant False",
          "explain2": { "text": "push constant False", "args": [] },
          "npc": "11",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "10"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (False, []); insert first value into the second; push result ([False])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "bool", "value": "False" }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "bool", "value": "False" } ] } ] },
          "npc": "12",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "bool", "value": "False" } ] } ],
          "pc": "11"
        },

        {
          "code": "Push False",
          "explain": "push constant False",
          "explain2": { "text": "push constant False", "args": [] },
          "npc": "13",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "12"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (False, [False]); insert first value into the second; push result ([False, False])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "bool", "value": "False" }, { "type": "list", "value": [{ "type": "bool", "value": "False" } ] }, { "type": "list", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] } ] },
          "npc": "14",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] } ],
          "pc": "13"
        },

        {
          "code": "Store wants",
          "explain": "pop value ([False, False]) and store into variable wants",
          "explain2": { "text": "pop value (#+) and store into variable #@", "args": [ { "type": "list", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" } ] } ] },
          "shared": { "crit": { "type": "int", "value": "0" }, "wants": { "type": "list", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] } },
          "npc": "15",
          "pop": "1",
          "push": [ ],
          "pc": "14"
        },

        {
          "code": "Push 0",
          "explain": "push constant 0",
          "explain2": { "text": "push constant 0", "args": [] },
          "npc": "16",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "15"
        },

        {
          "code": "Store turn",
          "explain": "pop value (0) and store into variable turn",
          "explain2": { "text": "pop value (#+) and store into variable #@", "args": [ { "type": "int", "value": "0" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "turn" } ] } ] },
          "shared": { "crit": { "type": "int", "value": "0" }, "turn": { "type": "int", "value": "0" }, "wants": { "type": "list", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] } },
          "npc": "17",
          "pop": "1",
          "push": [ ],
          "pc": "16"
        },

        {
          "code": "Jump 91",
          "explain": "jump over method definition: set program counter to 91",
          "explain2": { "text": "jump over method definition: set program counter to 91", "args": [] },
          "npc": "91",
          "push": [ ],
          "pc": "17"
        },

        {
          "code": "Push ?PC(18)",
          "explain": "push constant ?PC(18)",
          "explain2": { "text": "push constant ?PC(18)", "args": [] },
          "npc": "92",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "18" }, "args": [ ] } ],
          "pc": "91"
        },

        {
          "code": "Push 0",
          "explain": "push constant 0",
          "explain2": { "text": "push constant 0", "args": [] },
          "npc": "93",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "92"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (0, ?PC(18)); push result (?PC(18)[0])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "address", "func": { "type": "pc", "value": "18" }, "args": [ ] }, { "type": "address", "func": { "type": "pc", "value": "18" }, "args": [{ "type": "int", "value": "0" } ] } ] },
          "npc": "94",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "18" }, "args": [{ "type": "int", "value": "0" } ] } ],
          "pc": "93"
        },

        {
          "code": "Push {:}",
          "explain": "push constant {:}",
          "explain2": { "text": "push constant {:}", "args": [] },
          "npc": "95",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "94"
        },

        {
          "code": "Spawn",
          "explain": "pop local state ({:}), arg (0), and pc (18: \"dekk\"), and spawn thread",
          "explain2": { "text": "pop local state (#+), arg (#+), and pc (18: #+), and spawn thread", "args": [ { "type": "dict", "value": [] }, { "type": "int", "value": "0" }, { "type": "atom", "value": "dekk" } ] },
          "npc": "96",
          "pop": "2",
          "push": [ ],
          "pc": "95"
        },

        {
          "code": "Push ?PC(18)",
          "explain": "push constant ?PC(18)",
          "explain2": { "text": "push constant ?PC(18)", "args": [] },
          "npc": "97",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "18" }, "args": [ ] } ],
          "pc": "96"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "98",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "97"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (1, ?PC(18)); push result (?PC(18)[1])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "address", "func": { "type": "pc", "value": "18" }, "args": [ ] }, { "type": "address", "func": { "type": "pc", "value": "18" }, "args": [{ "type": "int", "value": "1" } ] } ] },
          "npc": "99",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "18" }, "args": [{ "type": "int", "value": "1" } ] } ],
          "pc": "98"
        },

        {
          "code": "Push {:}",
          "explain": "push constant {:}",
          "explain2": { "text": "push constant {:}", "args": [] },
          "npc": "100",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "99"
        },

        {
          "code": "Spawn",
          "explain": "pop local state ({:}), arg (1), and pc (18: \"dekk\"), and spawn thread",
          "explain2": { "text": "pop local state (#+), arg (#+), and pc (18: #+), and spawn thread", "args": [ { "type": "dict", "value": [] }, { "type": "int", "value": "1" }, { "type": "atom", "value": "dekk" } ] },
          "npc": "101",
          "pop": "2",
          "push": [ ],
          "pc": "100"
        },

        {
          "code": "ReturnOp(result. None)",
          "explain": "pop caller's method variables and pc and push result (%+), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (%+), or terminate if no caller", "args": [ { "type": "address" } ] },
          "npc": "101",
          "mode": "terminated",
          "pop": "1",
          "push": [ { "type": "address" } ],
          "pc": "101"
        }

      ],
      "ctxbag": {
          "7ee7fa00017a": "1",
          "7ee7fa0001ca": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7ee7fa0001fa",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "101",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "101","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7ee7fa00017a",
          "fp": "1",
          "name": "dekk(0)",
          "entry": "18",
          "pc": "18",
          "sp": "1",
          "stack": [{ "type": "int", "value": "0" }],
          "trace": [
{"pc": "18","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "dekk", "args": "p_q", "value": { "type": "int", "value": "0" } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7ee7fa0001ca",
          "fp": "1",
          "name": "dekk(1)",
          "entry": "18",
          "pc": "18",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "18","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "dekk", "args": "p_q", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "2",
      "tid": "1",
      "shared": { "crit": { "type": "int", "value": "0" }, "turn": { "type": "int", "value": "0" }, "wants": { "type": "list", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] } },
      "name": "dekk(0)",
      "context": {
        "tid": "1",
        "hvalue": "7ee7fa00017a",
        "fp": "1",
        "name": "dekk(0)",
        "entry": "18",
        "pc": "18",
        "sp": "1",
        "stack": [{ "type": "int", "value": "0" }],
        "trace": [
{"pc": "18","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ },"sp": 0}
        ],
        "next": { "type": "Frame", "name": "dekk", "args": "p_q", "value": { "type": "int", "value": "0" } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Frame dekk(p_q)",
          "explain": "pop argument (0), assign to p_q, and run method \"dekk\"",
          "explain2": { "text": "pop argument (#+), assign to p_q, and run method #+", "args": [ { "type": "int", "value": "0" }, { "type": "atom", "value": "dekk" } ] },
          "npc": "19",
          "fp": "1",
          "trace": [
{"pc": "19","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "local": { "p_q": { "type": "int", "value": "0" } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "18"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "20",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "19"
        },

        {
          "code": "Push False",
          "explain": "push constant False",
          "explain2": { "text": "push constant False", "args": [] },
          "npc": "21",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "20"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (False, {}); insert first value into the second; push result ({ False })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "bool", "value": "False" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "bool", "value": "False" } ] } ] },
          "npc": "22",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "bool", "value": "False" } ] } ],
          "pc": "21"
        },

        {
          "code": "Push True",
          "explain": "push constant True",
          "explain2": { "text": "push constant True", "args": [] },
          "npc": "23",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "22"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (True, { False }); insert first value into the second; push result ({ False, True })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "bool", "value": "True" }, { "type": "set", "value": [{ "type": "bool", "value": "False" } ] }, { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] } ] },
          "npc": "24",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] } ],
          "pc": "23"
        }

      ],
      "ctxbag": {
          "7ee7fa0001ca": "1",
          "7ee7fa00026a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7ee7fa0001fa",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "101",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "101","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7ee7fa00026a",
          "fp": "1",
          "name": "dekk(0)",
          "entry": "18",
          "pc": "24",
          "sp": "2",
          "stack": [{ "type": "dict", "value": [] }, { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] }],
          "trace": [
{"pc": "24","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "next": { "type": "Choose", "value": { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] } },
          "mode": "choosing"
        },
        {
          "tid": "2",
          "hvalue": "7ee7fa0001ca",
          "fp": "1",
          "name": "dekk(1)",
          "entry": "18",
          "pc": "18",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "18","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "dekk", "args": "p_q", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "5",
      "tid": "1",
      "shared": { "crit": { "type": "int", "value": "0" }, "turn": { "type": "int", "value": "0" }, "wants": { "type": "list", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] } },
      "name": "dekk(0)",
      "choice": { "type": "bool", "value": "True" },
      "context": {
        "tid": "1",
        "hvalue": "7ee7fa00026a",
        "fp": "1",
        "name": "dekk(0)",
        "entry": "18",
        "pc": "24",
        "sp": "2",
        "stack": [{ "type": "dict", "value": [] }, { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] }],
        "trace": [
{"pc": "24","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
        ],
        "next": { "type": "Choose", "value": { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Choose",
          "explain": "replace top of stack ({ False, True }) with choice (True)",
          "explain2": { "text": "replace top of stack (#+) with choice (#+)", "args": [ { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] }, { "type": "bool", "value": "True" } ] },
          "choose": { "type": "bool", "value": "True" },
          "npc": "25",
          "fp": "1",
          "trace": [
{"pc": "25","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "pop": "1",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "24"
        },

        {
          "code": "JumpCond False 89",
          "explain": "pop value (True), compare to False, and jump to 89 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 89 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "26",
          "pop": "1",
          "push": [ ],
          "pc": "25"
        },

        {
          "code": "Push ?wants",
          "explain": "push constant ?wants",
          "explain2": { "text": "push constant ?wants", "args": [] },
          "npc": "27",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" } ] } ],
          "pc": "26"
        },

        {
          "code": "LoadVar p_q",
          "explain": "push value (0) of variable \"p_q\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "0" }, { "type": "atom", "value": "p_q" } ] },
          "npc": "28",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "27"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (0, ?wants); push result (?wants[0])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "0" } ] } ] },
          "npc": "29",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "0" } ] } ],
          "pc": "28"
        },

        {
          "code": "Push True",
          "explain": "push constant True",
          "explain2": { "text": "push constant True", "args": [] },
          "npc": "30",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "29"
        }

      ],
      "ctxbag": {
          "7ee7fa0001ca": "1",
          "7ee7fc40007a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7ee7fa0001fa",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "101",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "101","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7ee7fc40007a",
          "fp": "1",
          "name": "dekk(0)",
          "entry": "18",
          "pc": "30",
          "sp": "3",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "0" } ] }, { "type": "bool", "value": "True" }],
          "trace": [
{"pc": "30","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "next": { "type": "Store", "var": "wants[0]", "value": { "type": "bool", "value": "True" } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7ee7fa0001ca",
          "fp": "1",
          "name": "dekk(1)",
          "entry": "18",
          "pc": "18",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "18","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "dekk", "args": "p_q", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "10",
      "tid": "1",
      "shared": { "crit": { "type": "int", "value": "0" }, "turn": { "type": "int", "value": "0" }, "wants": { "type": "list", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] } },
      "name": "dekk(0)",
      "context": {
        "tid": "1",
        "hvalue": "7ee7fc40007a",
        "fp": "1",
        "name": "dekk(0)",
        "entry": "18",
        "pc": "30",
        "sp": "3",
        "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "0" } ] }, { "type": "bool", "value": "True" }],
        "trace": [
{"pc": "30","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
        ],
        "next": { "type": "Store", "var": "wants[0]", "value": { "type": "bool", "value": "True" } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Store",
          "explain": "pop value (True) and address (?wants[0]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "bool", "value": "True" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "0" } ] } ] },
          "shared": { "crit": { "type": "int", "value": "0" }, "turn": { "type": "int", "value": "0" }, "wants": { "type": "list", "value": [{ "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] } },
          "npc": "31",
          "fp": "1",
          "trace": [
{"pc": "31","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "pop": "2",
          "push": [ ],
          "pc": "30"
        },

        {
          "code": "Push ?wants",
          "explain": "push constant ?wants",
          "explain2": { "text": "push constant ?wants", "args": [] },
          "npc": "32",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" } ] } ],
          "pc": "31"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "33",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "32"
        },

        {
          "code": "LoadVar p_q",
          "explain": "push value (0) of variable \"p_q\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "0" }, { "type": "atom", "value": "p_q" } ] },
          "npc": "34",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "33"
        },

        {
          "code": "2-ary -",
          "explain": "pop 2 values (0, 1); the second integer minus the first; push result (1)",
          "explain2": { "text": "pop 2 values (#+, #+); the second integer minus the first; push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "int", "value": "1" }, { "type": "int", "value": "1" } ] },
          "npc": "35",
          "pop": "1",
          "push": [ ],
          "pc": "34"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (1, ?wants); push result (?wants[1])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "1" } ] } ] },
          "npc": "36",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "1" } ] } ],
          "pc": "35"
        }

      ],
      "ctxbag": {
          "7ee7fa0001ca": "1",
          "7ee7fc40018a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7ee7fa0001fa",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "101",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "101","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7ee7fc40018a",
          "fp": "1",
          "name": "dekk(0)",
          "entry": "18",
          "pc": "36",
          "sp": "2",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "1" } ] }],
          "trace": [
{"pc": "36","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "next": { "type": "Load", "var": "wants[1]" },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7ee7fa0001ca",
          "fp": "1",
          "name": "dekk(1)",
          "entry": "18",
          "pc": "18",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "18","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "dekk", "args": "p_q", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "19",
      "tid": "1",
      "shared": { "crit": { "type": "int", "value": "0" }, "turn": { "type": "int", "value": "0" }, "wants": { "type": "list", "value": [{ "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] } },
      "name": "dekk(0)",
      "context": {
        "tid": "1",
        "hvalue": "7ee7fc40018a",
        "fp": "1",
        "name": "dekk(0)",
        "entry": "18",
        "pc": "36",
        "sp": "2",
        "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "1" } ] }],
        "trace": [
{"pc": "36","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
        ],
        "next": { "type": "Load", "var": "wants[1]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?wants[1]) and push value (False)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "1" } ] }, { "type": "bool", "value": "False" } ] },
          "npc": "37",
          "fp": "1",
          "trace": [
{"pc": "37","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "pop": "1",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "36"
        },

        {
          "code": "JumpCond False 55",
          "explain": "pop value (False), compare to False, and jump to 55 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 55 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] },
          "npc": "55",
          "pop": "1",
          "push": [ ],
          "pc": "37"
        }

      ],
      "ctxbag": {
          "7ee7fa0001ca": "1",
          "7ee800c0001a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7ee7fa0001fa",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "101",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "101","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7ee800c0001a",
          "fp": "1",
          "name": "dekk(0)",
          "entry": "18",
          "pc": "55",
          "sp": "1",
          "stack": [{ "type": "dict", "value": [] }],
          "trace": [
{"pc": "55","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7ee7fa0001ca",
          "fp": "1",
          "name": "dekk(1)",
          "entry": "18",
          "pc": "18",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "18","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "dekk", "args": "p_q", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "27",
      "tid": "1",
      "shared": { "crit": { "type": "int", "value": "0" }, "turn": { "type": "int", "value": "0" }, "wants": { "type": "list", "value": [{ "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] } },
      "name": "dekk(0)",
      "context": {
        "tid": "1",
        "hvalue": "7ee800c0001a",
        "fp": "1",
        "name": "dekk(0)",
        "entry": "18",
        "pc": "55",
        "sp": "1",
        "stack": [{ "type": "dict", "value": [] }],
        "trace": [
{"pc": "55","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
        ],
        "next": { "type": "AtomicInc" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "AtomicInc(eager)",
          "explain": "increment atomic counter from 0 to 1: becomes atomic",
          "explain2": { "text": "increment atomic counter from 0 to 1: becomes atomic", "args": [ ] },
          "npc": "56",
          "fp": "1",
          "trace": [
{"pc": "56","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "atomic": "1",
          "push": [ ],
          "pc": "55"
        },

        {
          "code": "Load crit",
          "explain": "push value (0) of variable crit",
          "explain2": { "text": "push value (#+) of variable crit", "args": [ { "type": "int", "value": "0" } ] },
          "npc": "57",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "56"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "58",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "57"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values (1, 0); add the integers; push result (1)",
          "explain2": { "text": "pop 2 values (#+, #+); add the integers; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "0" }, { "type": "int", "value": "1" } ] },
          "npc": "59",
          "pop": "2",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "58"
        },

        {
          "code": "Store crit",
          "explain": "pop value (1) and store into variable crit",
          "explain2": { "text": "pop value (#+) and store into variable #@", "args": [ { "type": "int", "value": "1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "crit" } ] } ] },
          "shared": { "crit": { "type": "int", "value": "1" }, "turn": { "type": "int", "value": "0" }, "wants": { "type": "list", "value": [{ "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] } },
          "npc": "60",
          "pop": "1",
          "push": [ ],
          "pc": "59"
        },

        {
          "code": "AtomicDec",
          "explain": "decrement atomic counter from 1 to 0: no longer atomic",
          "explain2": { "text": "decrement atomic counter from 1 to 0: no longer atomic", "args": [ ] },
          "npc": "61",
          "atomic": "0",
          "push": [ ],
          "pc": "60"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "62",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "61"
        },

        {
          "code": "Push \"entrou\"",
          "explain": "push constant \"entrou\"",
          "explain2": { "text": "push constant \"entrou\"", "args": [] },
          "npc": "63",
          "push": [ { "type": "atom", "value": "entrou" } ],
          "pc": "62"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (\"entrou\", []); insert first value into the second; push result ([\"entrou\"])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "atom", "value": "entrou" }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "atom", "value": "entrou" } ] } ] },
          "npc": "64",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "atom", "value": "entrou" } ] } ],
          "pc": "63"
        },

        {
          "code": "LoadVar p_q",
          "explain": "push value (0) of variable \"p_q\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "0" }, { "type": "atom", "value": "p_q" } ] },
          "npc": "65",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "64"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (0, [\"entrou\"]); insert first value into the second; push result ([\"entrou\", 0])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "list", "value": [{ "type": "atom", "value": "entrou" } ] }, { "type": "list", "value": [{ "type": "atom", "value": "entrou" }, { "type": "int", "value": "0" } ] } ] },
          "npc": "66",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "atom", "value": "entrou" }, { "type": "int", "value": "0" } ] } ],
          "pc": "65"
        }

      ],
      "ctxbag": {
          "7ee7fa0001ca": "1",
          "7ee80780009a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7ee7fa0001fa",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "101",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "101","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7ee80780009a",
          "fp": "1",
          "name": "dekk(0)",
          "entry": "18",
          "pc": "66",
          "sp": "2",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [{ "type": "atom", "value": "entrou" }, { "type": "int", "value": "0" } ] }],
          "trace": [
{"pc": "66","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "next": { "type": "Print", "value": { "type": "list", "value": [{ "type": "atom", "value": "entrou" }, { "type": "int", "value": "0" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7ee7fa0001ca",
          "fp": "1",
          "name": "dekk(1)",
          "entry": "18",
          "pc": "18",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "18","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "dekk", "args": "p_q", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "36",
      "tid": "1",
      "shared": { "crit": { "type": "int", "value": "1" }, "turn": { "type": "int", "value": "0" }, "wants": { "type": "list", "value": [{ "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] } },
      "name": "dekk(0)",
      "context": {
        "tid": "1",
        "hvalue": "7ee80780009a",
        "fp": "1",
        "name": "dekk(0)",
        "entry": "18",
        "pc": "66",
        "sp": "2",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [{ "type": "atom", "value": "entrou" }, { "type": "int", "value": "0" } ] }],
        "trace": [
{"pc": "66","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
        ],
        "next": { "type": "Print", "value": { "type": "list", "value": [{ "type": "atom", "value": "entrou" }, { "type": "int", "value": "0" } ] } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Print",
          "explain": "pop value ([\"entrou\", 0]) and add to print log",
          "explain2": { "text": "pop value (#+) and add to print log", "args": [ { "type": "list", "value": [{ "type": "atom", "value": "entrou" }, { "type": "int", "value": "0" } ] } ] },
          "print": { "type": "list", "value": [{ "type": "atom", "value": "entrou" }, { "type": "int", "value": "0" } ] },
          "npc": "67",
          "fp": "1",
          "trace": [
{"pc": "67","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "pop": "1",
          "push": [ ],
          "pc": "66"
        }

      ],
      "ctxbag": {
          "7ee7fa0001ca": "1",
          "7ee7fa00034a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7ee7fa0001fa",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "101",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "101","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7ee7fa00034a",
          "fp": "1",
          "name": "dekk(0)",
          "entry": "18",
          "pc": "67",
          "sp": "1",
          "stack": [{ "type": "dict", "value": [] }],
          "trace": [
{"pc": "67","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7ee7fa0001ca",
          "fp": "1",
          "name": "dekk(1)",
          "entry": "18",
          "pc": "18",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "18","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "dekk", "args": "p_q", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "48",
      "tid": "1",
      "shared": { "crit": { "type": "int", "value": "1" }, "turn": { "type": "int", "value": "0" }, "wants": { "type": "list", "value": [{ "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] } },
      "name": "dekk(0)",
      "context": {
        "tid": "1",
        "hvalue": "7ee7fa00034a",
        "fp": "1",
        "name": "dekk(0)",
        "entry": "18",
        "pc": "67",
        "sp": "1",
        "stack": [{ "type": "dict", "value": [] }],
        "trace": [
{"pc": "67","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
        ],
        "next": { "type": "AtomicInc" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "AtomicInc(eager)",
          "explain": "increment atomic counter from 0 to 1: becomes atomic",
          "explain2": { "text": "increment atomic counter from 0 to 1: becomes atomic", "args": [ ] },
          "npc": "68",
          "fp": "1",
          "trace": [
{"pc": "68","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "atomic": "1",
          "push": [ ],
          "pc": "67"
        },

        {
          "code": "Load crit",
          "explain": "push value (1) of variable crit",
          "explain2": { "text": "push value (#+) of variable crit", "args": [ { "type": "int", "value": "1" } ] },
          "npc": "69",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "68"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "70",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "69"
        },

        {
          "code": "2-ary -",
          "explain": "pop 2 values (1, 1); the second integer minus the first; push result (0)",
          "explain2": { "text": "pop 2 values (#+, #+); the second integer minus the first; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "1" }, { "type": "int", "value": "0" } ] },
          "npc": "71",
          "pop": "2",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "70"
        },

        {
          "code": "Store crit",
          "explain": "pop value (0) and store into variable crit",
          "explain2": { "text": "pop value (#+) and store into variable #@", "args": [ { "type": "int", "value": "0" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "crit" } ] } ] },
          "shared": { "crit": { "type": "int", "value": "0" }, "turn": { "type": "int", "value": "0" }, "wants": { "type": "list", "value": [{ "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] } },
          "npc": "72",
          "pop": "1",
          "push": [ ],
          "pc": "71"
        },

        {
          "code": "AtomicDec",
          "explain": "decrement atomic counter from 1 to 0: no longer atomic",
          "explain2": { "text": "decrement atomic counter from 1 to 0: no longer atomic", "args": [ ] },
          "npc": "73",
          "atomic": "0",
          "push": [ ],
          "pc": "72"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "74",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "73"
        },

        {
          "code": "Push \"saiu\"",
          "explain": "push constant \"saiu\"",
          "explain2": { "text": "push constant \"saiu\"", "args": [] },
          "npc": "75",
          "push": [ { "type": "atom", "value": "saiu" } ],
          "pc": "74"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (\"saiu\", []); insert first value into the second; push result ([\"saiu\"])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "atom", "value": "saiu" }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "atom", "value": "saiu" } ] } ] },
          "npc": "76",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "atom", "value": "saiu" } ] } ],
          "pc": "75"
        },

        {
          "code": "LoadVar p_q",
          "explain": "push value (0) of variable \"p_q\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "0" }, { "type": "atom", "value": "p_q" } ] },
          "npc": "77",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "76"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (0, [\"saiu\"]); insert first value into the second; push result ([\"saiu\", 0])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "list", "value": [{ "type": "atom", "value": "saiu" } ] }, { "type": "list", "value": [{ "type": "atom", "value": "saiu" }, { "type": "int", "value": "0" } ] } ] },
          "npc": "78",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "atom", "value": "saiu" }, { "type": "int", "value": "0" } ] } ],
          "pc": "77"
        }

      ],
      "ctxbag": {
          "7ee7fa0001ca": "1",
          "7ee7fc4002ca": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7ee7fa0001fa",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "101",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "101","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7ee7fc4002ca",
          "fp": "1",
          "name": "dekk(0)",
          "entry": "18",
          "pc": "78",
          "sp": "2",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [{ "type": "atom", "value": "saiu" }, { "type": "int", "value": "0" } ] }],
          "trace": [
{"pc": "78","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "next": { "type": "Print", "value": { "type": "list", "value": [{ "type": "atom", "value": "saiu" }, { "type": "int", "value": "0" } ] } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7ee7fa0001ca",
          "fp": "1",
          "name": "dekk(1)",
          "entry": "18",
          "pc": "18",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "18","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "dekk", "args": "p_q", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "64",
      "tid": "1",
      "shared": { "crit": { "type": "int", "value": "0" }, "turn": { "type": "int", "value": "0" }, "wants": { "type": "list", "value": [{ "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] } },
      "name": "dekk(0)",
      "context": {
        "tid": "1",
        "hvalue": "7ee7fc4002ca",
        "fp": "1",
        "name": "dekk(0)",
        "entry": "18",
        "pc": "78",
        "sp": "2",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [{ "type": "atom", "value": "saiu" }, { "type": "int", "value": "0" } ] }],
        "trace": [
{"pc": "78","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
        ],
        "next": { "type": "Print", "value": { "type": "list", "value": [{ "type": "atom", "value": "saiu" }, { "type": "int", "value": "0" } ] } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Print",
          "explain": "pop value ([\"saiu\", 0]) and add to print log",
          "explain2": { "text": "pop value (#+) and add to print log", "args": [ { "type": "list", "value": [{ "type": "atom", "value": "saiu" }, { "type": "int", "value": "0" } ] } ] },
          "print": { "type": "list", "value": [{ "type": "atom", "value": "saiu" }, { "type": "int", "value": "0" } ] },
          "npc": "79",
          "fp": "1",
          "trace": [
{"pc": "79","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "pop": "1",
          "push": [ ],
          "pc": "78"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "80",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "79"
        },

        {
          "code": "LoadVar p_q",
          "explain": "push value (0) of variable \"p_q\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "0" }, { "type": "atom", "value": "p_q" } ] },
          "npc": "81",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "80"
        },

        {
          "code": "2-ary -",
          "explain": "pop 2 values (0, 1); the second integer minus the first; push result (1)",
          "explain2": { "text": "pop 2 values (#+, #+); the second integer minus the first; push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "int", "value": "1" }, { "type": "int", "value": "1" } ] },
          "npc": "82",
          "pop": "1",
          "push": [ ],
          "pc": "81"
        }

      ],
      "ctxbag": {
          "7ee7f7c0009a": "1",
          "7ee7fa0001ca": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7ee7fa0001fa",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "101",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "101","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7ee7f7c0009a",
          "fp": "1",
          "name": "dekk(0)",
          "entry": "18",
          "pc": "82",
          "sp": "2",
          "stack": [{ "type": "dict", "value": [] }, { "type": "int", "value": "1" }],
          "trace": [
{"pc": "82","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "next": { "type": "Store", "var": "turn", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7ee7fa0001ca",
          "fp": "1",
          "name": "dekk(1)",
          "entry": "18",
          "pc": "18",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "18","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "dekk", "args": "p_q", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "78",
      "tid": "1",
      "shared": { "crit": { "type": "int", "value": "0" }, "turn": { "type": "int", "value": "0" }, "wants": { "type": "list", "value": [{ "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] } },
      "name": "dekk(0)",
      "context": {
        "tid": "1",
        "hvalue": "7ee7f7c0009a",
        "fp": "1",
        "name": "dekk(0)",
        "entry": "18",
        "pc": "82",
        "sp": "2",
        "stack": [{ "type": "dict", "value": [] }, { "type": "int", "value": "1" }],
        "trace": [
{"pc": "82","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
        ],
        "next": { "type": "Store", "var": "turn", "value": { "type": "int", "value": "1" } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Store turn",
          "explain": "pop value (1) and store into variable turn",
          "explain2": { "text": "pop value (#+) and store into variable #@", "args": [ { "type": "int", "value": "1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "turn" } ] } ] },
          "shared": { "crit": { "type": "int", "value": "0" }, "turn": { "type": "int", "value": "1" }, "wants": { "type": "list", "value": [{ "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] } },
          "npc": "83",
          "fp": "1",
          "trace": [
{"pc": "83","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "pop": "1",
          "push": [ ],
          "pc": "82"
        },

        {
          "code": "Push ?wants",
          "explain": "push constant ?wants",
          "explain2": { "text": "push constant ?wants", "args": [] },
          "npc": "84",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" } ] } ],
          "pc": "83"
        },

        {
          "code": "LoadVar p_q",
          "explain": "push value (0) of variable \"p_q\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "0" }, { "type": "atom", "value": "p_q" } ] },
          "npc": "85",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "84"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (0, ?wants); push result (?wants[0])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "0" } ] } ] },
          "npc": "86",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "0" } ] } ],
          "pc": "85"
        },

        {
          "code": "Push False",
          "explain": "push constant False",
          "explain2": { "text": "push constant False", "args": [] },
          "npc": "87",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "86"
        }

      ],
      "ctxbag": {
          "7ee7fa0001ca": "1",
          "7ee7fa0003ea": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7ee7fa0001fa",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "101",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "101","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7ee7fa0003ea",
          "fp": "1",
          "name": "dekk(0)",
          "entry": "18",
          "pc": "87",
          "sp": "3",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "0" } ] }, { "type": "bool", "value": "False" }],
          "trace": [
{"pc": "87","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "next": { "type": "Store", "var": "wants[0]", "value": { "type": "bool", "value": "False" } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7ee7fa0001ca",
          "fp": "1",
          "name": "dekk(1)",
          "entry": "18",
          "pc": "18",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "18","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "dekk", "args": "p_q", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "93",
      "tid": "1",
      "shared": { "crit": { "type": "int", "value": "0" }, "turn": { "type": "int", "value": "1" }, "wants": { "type": "list", "value": [{ "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] } },
      "name": "dekk(0)",
      "context": {
        "tid": "1",
        "hvalue": "7ee7fa0003ea",
        "fp": "1",
        "name": "dekk(0)",
        "entry": "18",
        "pc": "87",
        "sp": "3",
        "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "0" } ] }, { "type": "bool", "value": "False" }],
        "trace": [
{"pc": "87","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
        ],
        "next": { "type": "Store", "var": "wants[0]", "value": { "type": "bool", "value": "False" } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Store",
          "explain": "pop value (False) and address (?wants[0]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "bool", "value": "False" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "0" } ] } ] },
          "shared": { "crit": { "type": "int", "value": "0" }, "turn": { "type": "int", "value": "1" }, "wants": { "type": "list", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] } },
          "npc": "88",
          "fp": "1",
          "trace": [
{"pc": "88","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "pop": "2",
          "push": [ ],
          "pc": "87"
        },

        {
          "code": "Jump 19",
          "explain": "set program counter to 19",
          "explain2": { "text": "set program counter to 19", "args": [] },
          "npc": "19",
          "push": [ ],
          "pc": "88"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "20",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "19"
        },

        {
          "code": "Push False",
          "explain": "push constant False",
          "explain2": { "text": "push constant False", "args": [] },
          "npc": "21",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "20"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (False, {}); insert first value into the second; push result ({ False })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "bool", "value": "False" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "bool", "value": "False" } ] } ] },
          "npc": "22",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "bool", "value": "False" } ] } ],
          "pc": "21"
        },

        {
          "code": "Push True",
          "explain": "push constant True",
          "explain2": { "text": "push constant True", "args": [] },
          "npc": "23",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "22"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (True, { False }); insert first value into the second; push result ({ False, True })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "bool", "value": "True" }, { "type": "set", "value": [{ "type": "bool", "value": "False" } ] }, { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] } ] },
          "npc": "24",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] } ],
          "pc": "23"
        }

      ],
      "ctxbag": {
          "7ee7fa0001ca": "1",
          "7ee7fa00026a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7ee7fa0001fa",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "101",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "101","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7ee7fa00026a",
          "fp": "1",
          "name": "dekk(0)",
          "entry": "18",
          "pc": "24",
          "sp": "2",
          "stack": [{ "type": "dict", "value": [] }, { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] }],
          "trace": [
{"pc": "24","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "next": { "type": "Choose", "value": { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] } },
          "mode": "choosing"
        },
        {
          "tid": "2",
          "hvalue": "7ee7fa0001ca",
          "fp": "1",
          "name": "dekk(1)",
          "entry": "18",
          "pc": "18",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "18","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "dekk", "args": "p_q", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "99",
      "tid": "1",
      "shared": { "crit": { "type": "int", "value": "0" }, "turn": { "type": "int", "value": "1" }, "wants": { "type": "list", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] } },
      "name": "dekk(0)",
      "choice": { "type": "bool", "value": "True" },
      "context": {
        "tid": "1",
        "hvalue": "7ee7fa00026a",
        "fp": "1",
        "name": "dekk(0)",
        "entry": "18",
        "pc": "24",
        "sp": "2",
        "stack": [{ "type": "dict", "value": [] }, { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] }],
        "trace": [
{"pc": "24","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
        ],
        "next": { "type": "Choose", "value": { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Choose",
          "explain": "replace top of stack ({ False, True }) with choice (True)",
          "explain2": { "text": "replace top of stack (#+) with choice (#+)", "args": [ { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] }, { "type": "bool", "value": "True" } ] },
          "choose": { "type": "bool", "value": "True" },
          "npc": "25",
          "fp": "1",
          "trace": [
{"pc": "25","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "pop": "1",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "24"
        },

        {
          "code": "JumpCond False 89",
          "explain": "pop value (True), compare to False, and jump to 89 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 89 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "26",
          "pop": "1",
          "push": [ ],
          "pc": "25"
        },

        {
          "code": "Push ?wants",
          "explain": "push constant ?wants",
          "explain2": { "text": "push constant ?wants", "args": [] },
          "npc": "27",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" } ] } ],
          "pc": "26"
        },

        {
          "code": "LoadVar p_q",
          "explain": "push value (0) of variable \"p_q\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "0" }, { "type": "atom", "value": "p_q" } ] },
          "npc": "28",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "27"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (0, ?wants); push result (?wants[0])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "0" } ] } ] },
          "npc": "29",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "0" } ] } ],
          "pc": "28"
        },

        {
          "code": "Push True",
          "explain": "push constant True",
          "explain2": { "text": "push constant True", "args": [] },
          "npc": "30",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "29"
        }

      ],
      "ctxbag": {
          "7ee7fa0001ca": "1",
          "7ee7fc40007a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7ee7fa0001fa",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "101",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "101","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7ee7fc40007a",
          "fp": "1",
          "name": "dekk(0)",
          "entry": "18",
          "pc": "30",
          "sp": "3",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "0" } ] }, { "type": "bool", "value": "True" }],
          "trace": [
{"pc": "30","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "next": { "type": "Store", "var": "wants[0]", "value": { "type": "bool", "value": "True" } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7ee7fa0001ca",
          "fp": "1",
          "name": "dekk(1)",
          "entry": "18",
          "pc": "18",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "18","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "dekk", "args": "p_q", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "113",
      "tid": "2",
      "shared": { "crit": { "type": "int", "value": "0" }, "turn": { "type": "int", "value": "1" }, "wants": { "type": "list", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] } },
      "name": "dekk(1)",
      "context": {
        "tid": "2",
        "hvalue": "7ee7fa0001ca",
        "fp": "1",
        "name": "dekk(1)",
        "entry": "18",
        "pc": "18",
        "sp": "1",
        "stack": [{ "type": "int", "value": "1" }],
        "trace": [
{"pc": "18","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ },"sp": 0}
        ],
        "next": { "type": "Frame", "name": "dekk", "args": "p_q", "value": { "type": "int", "value": "1" } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Frame dekk(p_q)",
          "explain": "pop argument (1), assign to p_q, and run method \"dekk\"",
          "explain2": { "text": "pop argument (#+), assign to p_q, and run method #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "dekk" } ] },
          "npc": "19",
          "fp": "1",
          "trace": [
{"pc": "19","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
          ],
          "local": { "p_q": { "type": "int", "value": "1" } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "18"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "20",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "19"
        },

        {
          "code": "Push False",
          "explain": "push constant False",
          "explain2": { "text": "push constant False", "args": [] },
          "npc": "21",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "20"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (False, {}); insert first value into the second; push result ({ False })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "bool", "value": "False" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "bool", "value": "False" } ] } ] },
          "npc": "22",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "bool", "value": "False" } ] } ],
          "pc": "21"
        },

        {
          "code": "Push True",
          "explain": "push constant True",
          "explain2": { "text": "push constant True", "args": [] },
          "npc": "23",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "22"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (True, { False }); insert first value into the second; push result ({ False, True })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "bool", "value": "True" }, { "type": "set", "value": [{ "type": "bool", "value": "False" } ] }, { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] } ] },
          "npc": "24",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] } ],
          "pc": "23"
        }

      ],
      "ctxbag": {
          "7ee7fa0002ba": "1",
          "7ee7fc40007a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7ee7fa0001fa",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "101",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "101","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7ee7fc40007a",
          "fp": "1",
          "name": "dekk(0)",
          "entry": "18",
          "pc": "30",
          "sp": "3",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "0" } ] }, { "type": "bool", "value": "True" }],
          "trace": [
{"pc": "30","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "next": { "type": "Store", "var": "wants[0]", "value": { "type": "bool", "value": "True" } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7ee7fa0002ba",
          "fp": "1",
          "name": "dekk(1)",
          "entry": "18",
          "pc": "24",
          "sp": "2",
          "stack": [{ "type": "dict", "value": [] }, { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] }],
          "trace": [
{"pc": "24","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
          ],
          "next": { "type": "Choose", "value": { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] } },
          "mode": "choosing"
        }
      ]
    },
    {
      "id": "123",
      "tid": "2",
      "shared": { "crit": { "type": "int", "value": "0" }, "turn": { "type": "int", "value": "1" }, "wants": { "type": "list", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] } },
      "name": "dekk(1)",
      "choice": { "type": "bool", "value": "True" },
      "context": {
        "tid": "2",
        "hvalue": "7ee7fa0002ba",
        "fp": "1",
        "name": "dekk(1)",
        "entry": "18",
        "pc": "24",
        "sp": "2",
        "stack": [{ "type": "dict", "value": [] }, { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] }],
        "trace": [
{"pc": "24","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
        ],
        "next": { "type": "Choose", "value": { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Choose",
          "explain": "replace top of stack ({ False, True }) with choice (True)",
          "explain2": { "text": "replace top of stack (#+) with choice (#+)", "args": [ { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] }, { "type": "bool", "value": "True" } ] },
          "choose": { "type": "bool", "value": "True" },
          "npc": "25",
          "fp": "1",
          "trace": [
{"pc": "25","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
          ],
          "pop": "1",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "24"
        },

        {
          "code": "JumpCond False 89",
          "explain": "pop value (True), compare to False, and jump to 89 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 89 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "26",
          "pop": "1",
          "push": [ ],
          "pc": "25"
        },

        {
          "code": "Push ?wants",
          "explain": "push constant ?wants",
          "explain2": { "text": "push constant ?wants", "args": [] },
          "npc": "27",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" } ] } ],
          "pc": "26"
        },

        {
          "code": "LoadVar p_q",
          "explain": "push value (1) of variable \"p_q\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "p_q" } ] },
          "npc": "28",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "27"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (1, ?wants); push result (?wants[1])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "1" } ] } ] },
          "npc": "29",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "1" } ] } ],
          "pc": "28"
        },

        {
          "code": "Push True",
          "explain": "push constant True",
          "explain2": { "text": "push constant True", "args": [] },
          "npc": "30",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "29"
        }

      ],
      "ctxbag": {
          "7ee7fc40007a": "1",
          "7ee7fc4000ea": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7ee7fa0001fa",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "101",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "101","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7ee7fc40007a",
          "fp": "1",
          "name": "dekk(0)",
          "entry": "18",
          "pc": "30",
          "sp": "3",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "0" } ] }, { "type": "bool", "value": "True" }],
          "trace": [
{"pc": "30","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "next": { "type": "Store", "var": "wants[0]", "value": { "type": "bool", "value": "True" } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7ee7fc4000ea",
          "fp": "1",
          "name": "dekk(1)",
          "entry": "18",
          "pc": "30",
          "sp": "3",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "1" } ] }, { "type": "bool", "value": "True" }],
          "trace": [
{"pc": "30","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
          ],
          "next": { "type": "Store", "var": "wants[1]", "value": { "type": "bool", "value": "True" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "135",
      "tid": "2",
      "shared": { "crit": { "type": "int", "value": "0" }, "turn": { "type": "int", "value": "1" }, "wants": { "type": "list", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] } },
      "name": "dekk(1)",
      "context": {
        "tid": "2",
        "hvalue": "7ee7fc4000ea",
        "fp": "1",
        "name": "dekk(1)",
        "entry": "18",
        "pc": "30",
        "sp": "3",
        "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "1" } ] }, { "type": "bool", "value": "True" }],
        "trace": [
{"pc": "30","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
        ],
        "next": { "type": "Store", "var": "wants[1]", "value": { "type": "bool", "value": "True" } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Store",
          "explain": "pop value (True) and address (?wants[1]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "bool", "value": "True" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "1" } ] } ] },
          "shared": { "crit": { "type": "int", "value": "0" }, "turn": { "type": "int", "value": "1" }, "wants": { "type": "list", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] } },
          "npc": "31",
          "fp": "1",
          "trace": [
{"pc": "31","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
          ],
          "pop": "2",
          "push": [ ],
          "pc": "30"
        },

        {
          "code": "Push ?wants",
          "explain": "push constant ?wants",
          "explain2": { "text": "push constant ?wants", "args": [] },
          "npc": "32",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" } ] } ],
          "pc": "31"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "33",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "32"
        },

        {
          "code": "LoadVar p_q",
          "explain": "push value (1) of variable \"p_q\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "p_q" } ] },
          "npc": "34",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "33"
        },

        {
          "code": "2-ary -",
          "explain": "pop 2 values (1, 1); the second integer minus the first; push result (0)",
          "explain2": { "text": "pop 2 values (#+, #+); the second integer minus the first; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "1" }, { "type": "int", "value": "0" } ] },
          "npc": "35",
          "pop": "2",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "34"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (0, ?wants); push result (?wants[0])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "0" } ] } ] },
          "npc": "36",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "0" } ] } ],
          "pc": "35"
        }

      ],
      "ctxbag": {
          "7ee7fc40007a": "1",
          "7ee7fc4001fa": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7ee7fa0001fa",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "101",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "101","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7ee7fc40007a",
          "fp": "1",
          "name": "dekk(0)",
          "entry": "18",
          "pc": "30",
          "sp": "3",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "0" } ] }, { "type": "bool", "value": "True" }],
          "trace": [
{"pc": "30","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "next": { "type": "Store", "var": "wants[0]", "value": { "type": "bool", "value": "True" } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7ee7fc4001fa",
          "fp": "1",
          "name": "dekk(1)",
          "entry": "18",
          "pc": "36",
          "sp": "2",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "0" } ] }],
          "trace": [
{"pc": "36","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
          ],
          "next": { "type": "Load", "var": "wants[0]" },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "150",
      "tid": "2",
      "shared": { "crit": { "type": "int", "value": "0" }, "turn": { "type": "int", "value": "1" }, "wants": { "type": "list", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] } },
      "name": "dekk(1)",
      "context": {
        "tid": "2",
        "hvalue": "7ee7fc4001fa",
        "fp": "1",
        "name": "dekk(1)",
        "entry": "18",
        "pc": "36",
        "sp": "2",
        "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "0" } ] }],
        "trace": [
{"pc": "36","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
        ],
        "next": { "type": "Load", "var": "wants[0]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?wants[0]) and push value (False)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "0" } ] }, { "type": "bool", "value": "False" } ] },
          "npc": "37",
          "fp": "1",
          "trace": [
{"pc": "37","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
          ],
          "pop": "1",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "36"
        },

        {
          "code": "JumpCond False 55",
          "explain": "pop value (False), compare to False, and jump to 55 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 55 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] },
          "npc": "55",
          "pop": "1",
          "push": [ ],
          "pc": "37"
        }

      ],
      "ctxbag": {
          "7ee7fc40007a": "1",
          "7ee800c0004a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7ee7fa0001fa",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "101",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "101","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7ee7fc40007a",
          "fp": "1",
          "name": "dekk(0)",
          "entry": "18",
          "pc": "30",
          "sp": "3",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "0" } ] }, { "type": "bool", "value": "True" }],
          "trace": [
{"pc": "30","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "next": { "type": "Store", "var": "wants[0]", "value": { "type": "bool", "value": "True" } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7ee800c0004a",
          "fp": "1",
          "name": "dekk(1)",
          "entry": "18",
          "pc": "55",
          "sp": "1",
          "stack": [{ "type": "dict", "value": [] }],
          "trace": [
{"pc": "55","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "153",
      "tid": "1",
      "shared": { "crit": { "type": "int", "value": "0" }, "turn": { "type": "int", "value": "1" }, "wants": { "type": "list", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] } },
      "name": "dekk(0)",
      "context": {
        "tid": "1",
        "hvalue": "7ee7fc40007a",
        "fp": "1",
        "name": "dekk(0)",
        "entry": "18",
        "pc": "30",
        "sp": "3",
        "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "0" } ] }, { "type": "bool", "value": "True" }],
        "trace": [
{"pc": "30","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
        ],
        "next": { "type": "Store", "var": "wants[0]", "value": { "type": "bool", "value": "True" } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Store",
          "explain": "pop value (True) and address (?wants[0]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "bool", "value": "True" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "0" } ] } ] },
          "shared": { "crit": { "type": "int", "value": "0" }, "turn": { "type": "int", "value": "1" }, "wants": { "type": "list", "value": [{ "type": "bool", "value": "True" }, { "type": "bool", "value": "True" } ] } },
          "npc": "31",
          "fp": "1",
          "trace": [
{"pc": "31","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "pop": "2",
          "push": [ ],
          "pc": "30"
        },

        {
          "code": "Push ?wants",
          "explain": "push constant ?wants",
          "explain2": { "text": "push constant ?wants", "args": [] },
          "npc": "32",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" } ] } ],
          "pc": "31"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "33",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "32"
        },

        {
          "code": "LoadVar p_q",
          "explain": "push value (0) of variable \"p_q\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "0" }, { "type": "atom", "value": "p_q" } ] },
          "npc": "34",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "33"
        },

        {
          "code": "2-ary -",
          "explain": "pop 2 values (0, 1); the second integer minus the first; push result (1)",
          "explain2": { "text": "pop 2 values (#+, #+); the second integer minus the first; push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "int", "value": "1" }, { "type": "int", "value": "1" } ] },
          "npc": "35",
          "pop": "1",
          "push": [ ],
          "pc": "34"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (1, ?wants); push result (?wants[1])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "1" } ] } ] },
          "npc": "36",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "1" } ] } ],
          "pc": "35"
        }

      ],
      "ctxbag": {
          "7ee7fc40018a": "1",
          "7ee800c0004a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7ee7fa0001fa",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "101",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "101","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7ee7fc40018a",
          "fp": "1",
          "name": "dekk(0)",
          "entry": "18",
          "pc": "36",
          "sp": "2",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "1" } ] }],
          "trace": [
{"pc": "36","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "next": { "type": "Load", "var": "wants[1]" },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7ee800c0004a",
          "fp": "1",
          "name": "dekk(1)",
          "entry": "18",
          "pc": "55",
          "sp": "1",
          "stack": [{ "type": "dict", "value": [] }],
          "trace": [
{"pc": "55","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "167",
      "tid": "1",
      "shared": { "crit": { "type": "int", "value": "0" }, "turn": { "type": "int", "value": "1" }, "wants": { "type": "list", "value": [{ "type": "bool", "value": "True" }, { "type": "bool", "value": "True" } ] } },
      "name": "dekk(0)",
      "context": {
        "tid": "1",
        "hvalue": "7ee7fc40018a",
        "fp": "1",
        "name": "dekk(0)",
        "entry": "18",
        "pc": "36",
        "sp": "2",
        "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "1" } ] }],
        "trace": [
{"pc": "36","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
        ],
        "next": { "type": "Load", "var": "wants[1]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?wants[1]) and push value (True)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "1" } ] }, { "type": "bool", "value": "True" } ] },
          "npc": "37",
          "fp": "1",
          "trace": [
{"pc": "37","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "pop": "1",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "36"
        },

        {
          "code": "JumpCond False 55",
          "explain": "pop value (True), compare to False, and jump to 55 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 55 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "38",
          "pop": "1",
          "push": [ ],
          "pc": "37"
        }

      ],
      "ctxbag": {
          "7ee7fc40022a": "1",
          "7ee800c0004a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7ee7fa0001fa",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "101",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "101","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7ee7fc40022a",
          "fp": "1",
          "name": "dekk(0)",
          "entry": "18",
          "pc": "38",
          "sp": "1",
          "stack": [{ "type": "dict", "value": [] }],
          "trace": [
{"pc": "38","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "next": { "type": "Load", "var": "turn" },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7ee800c0004a",
          "fp": "1",
          "name": "dekk(1)",
          "entry": "18",
          "pc": "55",
          "sp": "1",
          "stack": [{ "type": "dict", "value": [] }],
          "trace": [
{"pc": "55","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "182",
      "tid": "1",
      "shared": { "crit": { "type": "int", "value": "0" }, "turn": { "type": "int", "value": "1" }, "wants": { "type": "list", "value": [{ "type": "bool", "value": "True" }, { "type": "bool", "value": "True" } ] } },
      "name": "dekk(0)",
      "context": {
        "tid": "1",
        "hvalue": "7ee7fc40022a",
        "fp": "1",
        "name": "dekk(0)",
        "entry": "18",
        "pc": "38",
        "sp": "1",
        "stack": [{ "type": "dict", "value": [] }],
        "trace": [
{"pc": "38","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
        ],
        "next": { "type": "Load", "var": "turn" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load turn",
          "explain": "push value (1) of variable turn",
          "explain2": { "text": "push value (#+) of variable turn", "args": [ { "type": "int", "value": "1" } ] },
          "npc": "39",
          "fp": "1",
          "trace": [
{"pc": "39","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "38"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "40",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "39"
        },

        {
          "code": "LoadVar p_q",
          "explain": "push value (0) of variable \"p_q\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "0" }, { "type": "atom", "value": "p_q" } ] },
          "npc": "41",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "40"
        },

        {
          "code": "2-ary -",
          "explain": "pop 2 values (0, 1); the second integer minus the first; push result (1)",
          "explain2": { "text": "pop 2 values (#+, #+); the second integer minus the first; push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "int", "value": "1" }, { "type": "int", "value": "1" } ] },
          "npc": "42",
          "pop": "1",
          "push": [ ],
          "pc": "41"
        },

        {
          "code": "2-ary ==",
          "explain": "pop 2 values (1, 1); check if both values are the same; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if both values are the same; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "1" }, { "type": "bool", "value": "True" } ] },
          "npc": "43",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "42"
        },

        {
          "code": "JumpCond False 31",
          "explain": "pop value (True), compare to False, and jump to 31 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 31 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "44",
          "pop": "1",
          "push": [ ],
          "pc": "43"
        },

        {
          "code": "Push ?wants",
          "explain": "push constant ?wants",
          "explain2": { "text": "push constant ?wants", "args": [] },
          "npc": "45",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" } ] } ],
          "pc": "44"
        },

        {
          "code": "LoadVar p_q",
          "explain": "push value (0) of variable \"p_q\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "0" }, { "type": "atom", "value": "p_q" } ] },
          "npc": "46",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "45"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (0, ?wants); push result (?wants[0])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "0" } ] } ] },
          "npc": "47",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "0" } ] } ],
          "pc": "46"
        },

        {
          "code": "Push False",
          "explain": "push constant False",
          "explain2": { "text": "push constant False", "args": [] },
          "npc": "48",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "47"
        }

      ],
      "ctxbag": {
          "7ee800c0004a": "1",
          "7ee80780015a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7ee7fa0001fa",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "101",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "101","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7ee80780015a",
          "fp": "1",
          "name": "dekk(0)",
          "entry": "18",
          "pc": "48",
          "sp": "3",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "0" } ] }, { "type": "bool", "value": "False" }],
          "trace": [
{"pc": "48","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "next": { "type": "Store", "var": "wants[0]", "value": { "type": "bool", "value": "False" } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7ee800c0004a",
          "fp": "1",
          "name": "dekk(1)",
          "entry": "18",
          "pc": "55",
          "sp": "1",
          "stack": [{ "type": "dict", "value": [] }],
          "trace": [
{"pc": "55","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "196",
      "tid": "2",
      "shared": { "crit": { "type": "int", "value": "0" }, "turn": { "type": "int", "value": "1" }, "wants": { "type": "list", "value": [{ "type": "bool", "value": "True" }, { "type": "bool", "value": "True" } ] } },
      "name": "dekk(1)",
      "context": {
        "tid": "2",
        "hvalue": "7ee800c0004a",
        "fp": "1",
        "name": "dekk(1)",
        "entry": "18",
        "pc": "55",
        "sp": "1",
        "stack": [{ "type": "dict", "value": [] }],
        "trace": [
{"pc": "55","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
        ],
        "next": { "type": "AtomicInc" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "AtomicInc(eager)",
          "explain": "increment atomic counter from 0 to 1: becomes atomic",
          "explain2": { "text": "increment atomic counter from 0 to 1: becomes atomic", "args": [ ] },
          "npc": "56",
          "fp": "1",
          "trace": [
{"pc": "56","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
          ],
          "atomic": "1",
          "push": [ ],
          "pc": "55"
        },

        {
          "code": "Load crit",
          "explain": "push value (0) of variable crit",
          "explain2": { "text": "push value (#+) of variable crit", "args": [ { "type": "int", "value": "0" } ] },
          "npc": "57",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "56"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "58",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "57"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values (1, 0); add the integers; push result (1)",
          "explain2": { "text": "pop 2 values (#+, #+); add the integers; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "0" }, { "type": "int", "value": "1" } ] },
          "npc": "59",
          "pop": "2",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "58"
        },

        {
          "code": "Store crit",
          "explain": "pop value (1) and store into variable crit",
          "explain2": { "text": "pop value (#+) and store into variable #@", "args": [ { "type": "int", "value": "1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "crit" } ] } ] },
          "shared": { "crit": { "type": "int", "value": "1" }, "turn": { "type": "int", "value": "1" }, "wants": { "type": "list", "value": [{ "type": "bool", "value": "True" }, { "type": "bool", "value": "True" } ] } },
          "npc": "60",
          "pop": "1",
          "push": [ ],
          "pc": "59"
        },

        {
          "code": "AtomicDec",
          "explain": "decrement atomic counter from 1 to 0: no longer atomic",
          "explain2": { "text": "decrement atomic counter from 1 to 0: no longer atomic", "args": [ ] },
          "npc": "61",
          "atomic": "0",
          "push": [ ],
          "pc": "60"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "62",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "61"
        },

        {
          "code": "Push \"entrou\"",
          "explain": "push constant \"entrou\"",
          "explain2": { "text": "push constant \"entrou\"", "args": [] },
          "npc": "63",
          "push": [ { "type": "atom", "value": "entrou" } ],
          "pc": "62"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (\"entrou\", []); insert first value into the second; push result ([\"entrou\"])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "atom", "value": "entrou" }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "atom", "value": "entrou" } ] } ] },
          "npc": "64",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "atom", "value": "entrou" } ] } ],
          "pc": "63"
        },

        {
          "code": "LoadVar p_q",
          "explain": "push value (1) of variable \"p_q\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "p_q" } ] },
          "npc": "65",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "64"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (1, [\"entrou\"]); insert first value into the second; push result ([\"entrou\", 1])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "list", "value": [{ "type": "atom", "value": "entrou" } ] }, { "type": "list", "value": [{ "type": "atom", "value": "entrou" }, { "type": "int", "value": "1" } ] } ] },
          "npc": "66",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "atom", "value": "entrou" }, { "type": "int", "value": "1" } ] } ],
          "pc": "65"
        }

      ],
      "ctxbag": {
          "7ee80780012a": "1",
          "7ee80780015a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7ee7fa0001fa",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "101",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "101","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7ee80780015a",
          "fp": "1",
          "name": "dekk(0)",
          "entry": "18",
          "pc": "48",
          "sp": "3",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "0" } ] }, { "type": "bool", "value": "False" }],
          "trace": [
{"pc": "48","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "next": { "type": "Store", "var": "wants[0]", "value": { "type": "bool", "value": "False" } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7ee80780012a",
          "fp": "1",
          "name": "dekk(1)",
          "entry": "18",
          "pc": "66",
          "sp": "2",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [{ "type": "atom", "value": "entrou" }, { "type": "int", "value": "1" } ] }],
          "trace": [
{"pc": "66","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
          ],
          "next": { "type": "Print", "value": { "type": "list", "value": [{ "type": "atom", "value": "entrou" }, { "type": "int", "value": "1" } ] } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "211",
      "tid": "2",
      "shared": { "crit": { "type": "int", "value": "1" }, "turn": { "type": "int", "value": "1" }, "wants": { "type": "list", "value": [{ "type": "bool", "value": "True" }, { "type": "bool", "value": "True" } ] } },
      "name": "dekk(1)",
      "context": {
        "tid": "2",
        "hvalue": "7ee80780012a",
        "fp": "1",
        "name": "dekk(1)",
        "entry": "18",
        "pc": "66",
        "sp": "2",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [{ "type": "atom", "value": "entrou" }, { "type": "int", "value": "1" } ] }],
        "trace": [
{"pc": "66","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
        ],
        "next": { "type": "Print", "value": { "type": "list", "value": [{ "type": "atom", "value": "entrou" }, { "type": "int", "value": "1" } ] } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Print",
          "explain": "pop value ([\"entrou\", 1]) and add to print log",
          "explain2": { "text": "pop value (#+) and add to print log", "args": [ { "type": "list", "value": [{ "type": "atom", "value": "entrou" }, { "type": "int", "value": "1" } ] } ] },
          "print": { "type": "list", "value": [{ "type": "atom", "value": "entrou" }, { "type": "int", "value": "1" } ] },
          "npc": "67",
          "fp": "1",
          "trace": [
{"pc": "67","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
          ],
          "pop": "1",
          "push": [ ],
          "pc": "66"
        }

      ],
      "ctxbag": {
          "7ee7fa00037a": "1",
          "7ee80780015a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7ee7fa0001fa",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "101",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "101","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7ee80780015a",
          "fp": "1",
          "name": "dekk(0)",
          "entry": "18",
          "pc": "48",
          "sp": "3",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "0" } ] }, { "type": "bool", "value": "False" }],
          "trace": [
{"pc": "48","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "next": { "type": "Store", "var": "wants[0]", "value": { "type": "bool", "value": "False" } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7ee7fa00037a",
          "fp": "1",
          "name": "dekk(1)",
          "entry": "18",
          "pc": "67",
          "sp": "1",
          "stack": [{ "type": "dict", "value": [] }],
          "trace": [
{"pc": "67","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
          ],
          "next": { "type": "AtomicInc" },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "219",
      "tid": "2",
      "shared": { "crit": { "type": "int", "value": "1" }, "turn": { "type": "int", "value": "1" }, "wants": { "type": "list", "value": [{ "type": "bool", "value": "True" }, { "type": "bool", "value": "True" } ] } },
      "name": "dekk(1)",
      "context": {
        "tid": "2",
        "hvalue": "7ee7fa00037a",
        "fp": "1",
        "name": "dekk(1)",
        "entry": "18",
        "pc": "67",
        "sp": "1",
        "stack": [{ "type": "dict", "value": [] }],
        "trace": [
{"pc": "67","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
        ],
        "next": { "type": "AtomicInc" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "AtomicInc(eager)",
          "explain": "increment atomic counter from 0 to 1: becomes atomic",
          "explain2": { "text": "increment atomic counter from 0 to 1: becomes atomic", "args": [ ] },
          "npc": "68",
          "fp": "1",
          "trace": [
{"pc": "68","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
          ],
          "atomic": "1",
          "push": [ ],
          "pc": "67"
        },

        {
          "code": "Load crit",
          "explain": "push value (1) of variable crit",
          "explain2": { "text": "push value (#+) of variable crit", "args": [ { "type": "int", "value": "1" } ] },
          "npc": "69",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "68"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "70",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "69"
        },

        {
          "code": "2-ary -",
          "explain": "pop 2 values (1, 1); the second integer minus the first; push result (0)",
          "explain2": { "text": "pop 2 values (#+, #+); the second integer minus the first; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "1" }, { "type": "int", "value": "0" } ] },
          "npc": "71",
          "pop": "2",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "70"
        },

        {
          "code": "Store crit",
          "explain": "pop value (0) and store into variable crit",
          "explain2": { "text": "pop value (#+) and store into variable #@", "args": [ { "type": "int", "value": "0" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "crit" } ] } ] },
          "shared": { "crit": { "type": "int", "value": "0" }, "turn": { "type": "int", "value": "1" }, "wants": { "type": "list", "value": [{ "type": "bool", "value": "True" }, { "type": "bool", "value": "True" } ] } },
          "npc": "72",
          "pop": "1",
          "push": [ ],
          "pc": "71"
        },

        {
          "code": "AtomicDec",
          "explain": "decrement atomic counter from 1 to 0: no longer atomic",
          "explain2": { "text": "decrement atomic counter from 1 to 0: no longer atomic", "args": [ ] },
          "npc": "73",
          "atomic": "0",
          "push": [ ],
          "pc": "72"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "74",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "73"
        },

        {
          "code": "Push \"saiu\"",
          "explain": "push constant \"saiu\"",
          "explain2": { "text": "push constant \"saiu\"", "args": [] },
          "npc": "75",
          "push": [ { "type": "atom", "value": "saiu" } ],
          "pc": "74"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (\"saiu\", []); insert first value into the second; push result ([\"saiu\"])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "atom", "value": "saiu" }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "atom", "value": "saiu" } ] } ] },
          "npc": "76",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "atom", "value": "saiu" } ] } ],
          "pc": "75"
        },

        {
          "code": "LoadVar p_q",
          "explain": "push value (1) of variable \"p_q\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "p_q" } ] },
          "npc": "77",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "76"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (1, [\"saiu\"]); insert first value into the second; push result ([\"saiu\", 1])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "list", "value": [{ "type": "atom", "value": "saiu" } ] }, { "type": "list", "value": [{ "type": "atom", "value": "saiu" }, { "type": "int", "value": "1" } ] } ] },
          "npc": "78",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "atom", "value": "saiu" }, { "type": "int", "value": "1" } ] } ],
          "pc": "77"
        }

      ],
      "ctxbag": {
          "7ee7fc40031a": "1",
          "7ee80780015a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7ee7fa0001fa",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "101",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "101","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7ee80780015a",
          "fp": "1",
          "name": "dekk(0)",
          "entry": "18",
          "pc": "48",
          "sp": "3",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "0" } ] }, { "type": "bool", "value": "False" }],
          "trace": [
{"pc": "48","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "next": { "type": "Store", "var": "wants[0]", "value": { "type": "bool", "value": "False" } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7ee7fc40031a",
          "fp": "1",
          "name": "dekk(1)",
          "entry": "18",
          "pc": "78",
          "sp": "2",
          "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [{ "type": "atom", "value": "saiu" }, { "type": "int", "value": "1" } ] }],
          "trace": [
{"pc": "78","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
          ],
          "next": { "type": "Print", "value": { "type": "list", "value": [{ "type": "atom", "value": "saiu" }, { "type": "int", "value": "1" } ] } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "224",
      "tid": "2",
      "shared": { "crit": { "type": "int", "value": "0" }, "turn": { "type": "int", "value": "1" }, "wants": { "type": "list", "value": [{ "type": "bool", "value": "True" }, { "type": "bool", "value": "True" } ] } },
      "name": "dekk(1)",
      "context": {
        "tid": "2",
        "hvalue": "7ee7fc40031a",
        "fp": "1",
        "name": "dekk(1)",
        "entry": "18",
        "pc": "78",
        "sp": "2",
        "stack": [{ "type": "dict", "value": [] }, { "type": "list", "value": [{ "type": "atom", "value": "saiu" }, { "type": "int", "value": "1" } ] }],
        "trace": [
{"pc": "78","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
        ],
        "next": { "type": "Print", "value": { "type": "list", "value": [{ "type": "atom", "value": "saiu" }, { "type": "int", "value": "1" } ] } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Print",
          "explain": "pop value ([\"saiu\", 1]) and add to print log",
          "explain2": { "text": "pop value (#+) and add to print log", "args": [ { "type": "list", "value": [{ "type": "atom", "value": "saiu" }, { "type": "int", "value": "1" } ] } ] },
          "print": { "type": "list", "value": [{ "type": "atom", "value": "saiu" }, { "type": "int", "value": "1" } ] },
          "npc": "79",
          "fp": "1",
          "trace": [
{"pc": "79","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
          ],
          "pop": "1",
          "push": [ ],
          "pc": "78"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "80",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "79"
        },

        {
          "code": "LoadVar p_q",
          "explain": "push value (1) of variable \"p_q\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "p_q" } ] },
          "npc": "81",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "80"
        },

        {
          "code": "2-ary -",
          "explain": "pop 2 values (1, 1); the second integer minus the first; push result (0)",
          "explain2": { "text": "pop 2 values (#+, #+); the second integer minus the first; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "1" }, { "type": "int", "value": "0" } ] },
          "npc": "82",
          "pop": "2",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "81"
        }

      ],
      "ctxbag": {
          "7ee800c0007a": "1",
          "7ee80780015a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7ee7fa0001fa",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "101",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "101","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7ee80780015a",
          "fp": "1",
          "name": "dekk(0)",
          "entry": "18",
          "pc": "48",
          "sp": "3",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "0" } ] }, { "type": "bool", "value": "False" }],
          "trace": [
{"pc": "48","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "next": { "type": "Store", "var": "wants[0]", "value": { "type": "bool", "value": "False" } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7ee800c0007a",
          "fp": "1",
          "name": "dekk(1)",
          "entry": "18",
          "pc": "82",
          "sp": "2",
          "stack": [{ "type": "dict", "value": [] }, { "type": "int", "value": "0" }],
          "trace": [
{"pc": "82","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
          ],
          "next": { "type": "Store", "var": "turn", "value": { "type": "int", "value": "0" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "227",
      "tid": "2",
      "shared": { "crit": { "type": "int", "value": "0" }, "turn": { "type": "int", "value": "1" }, "wants": { "type": "list", "value": [{ "type": "bool", "value": "True" }, { "type": "bool", "value": "True" } ] } },
      "name": "dekk(1)",
      "context": {
        "tid": "2",
        "hvalue": "7ee800c0007a",
        "fp": "1",
        "name": "dekk(1)",
        "entry": "18",
        "pc": "82",
        "sp": "2",
        "stack": [{ "type": "dict", "value": [] }, { "type": "int", "value": "0" }],
        "trace": [
{"pc": "82","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
        ],
        "next": { "type": "Store", "var": "turn", "value": { "type": "int", "value": "0" } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Store turn",
          "explain": "pop value (0) and store into variable turn",
          "explain2": { "text": "pop value (#+) and store into variable #@", "args": [ { "type": "int", "value": "0" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "turn" } ] } ] },
          "shared": { "crit": { "type": "int", "value": "0" }, "turn": { "type": "int", "value": "0" }, "wants": { "type": "list", "value": [{ "type": "bool", "value": "True" }, { "type": "bool", "value": "True" } ] } },
          "npc": "83",
          "fp": "1",
          "trace": [
{"pc": "83","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
          ],
          "pop": "1",
          "push": [ ],
          "pc": "82"
        },

        {
          "code": "Push ?wants",
          "explain": "push constant ?wants",
          "explain2": { "text": "push constant ?wants", "args": [] },
          "npc": "84",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" } ] } ],
          "pc": "83"
        },

        {
          "code": "LoadVar p_q",
          "explain": "push value (1) of variable \"p_q\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "p_q" } ] },
          "npc": "85",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "84"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (1, ?wants); push result (?wants[1])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "1" } ] } ] },
          "npc": "86",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "1" } ] } ],
          "pc": "85"
        },

        {
          "code": "Push False",
          "explain": "push constant False",
          "explain2": { "text": "push constant False", "args": [] },
          "npc": "87",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "86"
        }

      ],
      "ctxbag": {
          "7ee80540001a": "1",
          "7ee80780015a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7ee7fa0001fa",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "101",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "101","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7ee80780015a",
          "fp": "1",
          "name": "dekk(0)",
          "entry": "18",
          "pc": "48",
          "sp": "3",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "0" } ] }, { "type": "bool", "value": "False" }],
          "trace": [
{"pc": "48","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "next": { "type": "Store", "var": "wants[0]", "value": { "type": "bool", "value": "False" } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7ee80540001a",
          "fp": "1",
          "name": "dekk(1)",
          "entry": "18",
          "pc": "87",
          "sp": "3",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "1" } ] }, { "type": "bool", "value": "False" }],
          "trace": [
{"pc": "87","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
          ],
          "next": { "type": "Store", "var": "wants[1]", "value": { "type": "bool", "value": "False" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "229",
      "tid": "2",
      "shared": { "crit": { "type": "int", "value": "0" }, "turn": { "type": "int", "value": "0" }, "wants": { "type": "list", "value": [{ "type": "bool", "value": "True" }, { "type": "bool", "value": "True" } ] } },
      "name": "dekk(1)",
      "context": {
        "tid": "2",
        "hvalue": "7ee80540001a",
        "fp": "1",
        "name": "dekk(1)",
        "entry": "18",
        "pc": "87",
        "sp": "3",
        "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "1" } ] }, { "type": "bool", "value": "False" }],
        "trace": [
{"pc": "87","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
        ],
        "next": { "type": "Store", "var": "wants[1]", "value": { "type": "bool", "value": "False" } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Store",
          "explain": "pop value (False) and address (?wants[1]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "bool", "value": "False" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "1" } ] } ] },
          "shared": { "crit": { "type": "int", "value": "0" }, "turn": { "type": "int", "value": "0" }, "wants": { "type": "list", "value": [{ "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] } },
          "npc": "88",
          "fp": "1",
          "trace": [
{"pc": "88","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
          ],
          "pop": "2",
          "push": [ ],
          "pc": "87"
        },

        {
          "code": "Jump 19",
          "explain": "set program counter to 19",
          "explain2": { "text": "set program counter to 19", "args": [] },
          "npc": "19",
          "push": [ ],
          "pc": "88"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "20",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "19"
        },

        {
          "code": "Push False",
          "explain": "push constant False",
          "explain2": { "text": "push constant False", "args": [] },
          "npc": "21",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "20"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (False, {}); insert first value into the second; push result ({ False })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "bool", "value": "False" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "bool", "value": "False" } ] } ] },
          "npc": "22",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "bool", "value": "False" } ] } ],
          "pc": "21"
        },

        {
          "code": "Push True",
          "explain": "push constant True",
          "explain2": { "text": "push constant True", "args": [] },
          "npc": "23",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "22"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (True, { False }); insert first value into the second; push result ({ False, True })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "bool", "value": "True" }, { "type": "set", "value": [{ "type": "bool", "value": "False" } ] }, { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] } ] },
          "npc": "24",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] } ],
          "pc": "23"
        }

      ],
      "ctxbag": {
          "7ee7fa0002ba": "1",
          "7ee80780015a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7ee7fa0001fa",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "101",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "101","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7ee80780015a",
          "fp": "1",
          "name": "dekk(0)",
          "entry": "18",
          "pc": "48",
          "sp": "3",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "0" } ] }, { "type": "bool", "value": "False" }],
          "trace": [
{"pc": "48","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "next": { "type": "Store", "var": "wants[0]", "value": { "type": "bool", "value": "False" } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7ee7fa0002ba",
          "fp": "1",
          "name": "dekk(1)",
          "entry": "18",
          "pc": "24",
          "sp": "2",
          "stack": [{ "type": "dict", "value": [] }, { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] }],
          "trace": [
{"pc": "24","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
          ],
          "next": { "type": "Choose", "value": { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] } },
          "mode": "choosing"
        }
      ]
    },
    {
      "id": "232",
      "tid": "2",
      "shared": { "crit": { "type": "int", "value": "0" }, "turn": { "type": "int", "value": "0" }, "wants": { "type": "list", "value": [{ "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] } },
      "name": "dekk(1)",
      "choice": { "type": "bool", "value": "True" },
      "context": {
        "tid": "2",
        "hvalue": "7ee7fa0002ba",
        "fp": "1",
        "name": "dekk(1)",
        "entry": "18",
        "pc": "24",
        "sp": "2",
        "stack": [{ "type": "dict", "value": [] }, { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] }],
        "trace": [
{"pc": "24","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
        ],
        "next": { "type": "Choose", "value": { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Choose",
          "explain": "replace top of stack ({ False, True }) with choice (True)",
          "explain2": { "text": "replace top of stack (#+) with choice (#+)", "args": [ { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] }, { "type": "bool", "value": "True" } ] },
          "choose": { "type": "bool", "value": "True" },
          "npc": "25",
          "fp": "1",
          "trace": [
{"pc": "25","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
          ],
          "pop": "1",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "24"
        },

        {
          "code": "JumpCond False 89",
          "explain": "pop value (True), compare to False, and jump to 89 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 89 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "26",
          "pop": "1",
          "push": [ ],
          "pc": "25"
        },

        {
          "code": "Push ?wants",
          "explain": "push constant ?wants",
          "explain2": { "text": "push constant ?wants", "args": [] },
          "npc": "27",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" } ] } ],
          "pc": "26"
        },

        {
          "code": "LoadVar p_q",
          "explain": "push value (1) of variable \"p_q\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "p_q" } ] },
          "npc": "28",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "27"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (1, ?wants); push result (?wants[1])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "1" } ] } ] },
          "npc": "29",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "1" } ] } ],
          "pc": "28"
        },

        {
          "code": "Push True",
          "explain": "push constant True",
          "explain2": { "text": "push constant True", "args": [] },
          "npc": "30",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "29"
        }

      ],
      "ctxbag": {
          "7ee7fc4000ea": "1",
          "7ee80780015a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7ee7fa0001fa",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "101",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "101","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7ee80780015a",
          "fp": "1",
          "name": "dekk(0)",
          "entry": "18",
          "pc": "48",
          "sp": "3",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "0" } ] }, { "type": "bool", "value": "False" }],
          "trace": [
{"pc": "48","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "next": { "type": "Store", "var": "wants[0]", "value": { "type": "bool", "value": "False" } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7ee7fc4000ea",
          "fp": "1",
          "name": "dekk(1)",
          "entry": "18",
          "pc": "30",
          "sp": "3",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "1" } ] }, { "type": "bool", "value": "True" }],
          "trace": [
{"pc": "30","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
          ],
          "next": { "type": "Store", "var": "wants[1]", "value": { "type": "bool", "value": "True" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "235",
      "tid": "2",
      "shared": { "crit": { "type": "int", "value": "0" }, "turn": { "type": "int", "value": "0" }, "wants": { "type": "list", "value": [{ "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] } },
      "name": "dekk(1)",
      "context": {
        "tid": "2",
        "hvalue": "7ee7fc4000ea",
        "fp": "1",
        "name": "dekk(1)",
        "entry": "18",
        "pc": "30",
        "sp": "3",
        "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "1" } ] }, { "type": "bool", "value": "True" }],
        "trace": [
{"pc": "30","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
        ],
        "next": { "type": "Store", "var": "wants[1]", "value": { "type": "bool", "value": "True" } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Store",
          "explain": "pop value (True) and address (?wants[1]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "bool", "value": "True" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "1" } ] } ] },
          "shared": { "crit": { "type": "int", "value": "0" }, "turn": { "type": "int", "value": "0" }, "wants": { "type": "list", "value": [{ "type": "bool", "value": "True" }, { "type": "bool", "value": "True" } ] } },
          "npc": "31",
          "fp": "1",
          "trace": [
{"pc": "31","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
          ],
          "pop": "2",
          "push": [ ],
          "pc": "30"
        },

        {
          "code": "Push ?wants",
          "explain": "push constant ?wants",
          "explain2": { "text": "push constant ?wants", "args": [] },
          "npc": "32",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" } ] } ],
          "pc": "31"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "33",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "32"
        },

        {
          "code": "LoadVar p_q",
          "explain": "push value (1) of variable \"p_q\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "p_q" } ] },
          "npc": "34",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "33"
        },

        {
          "code": "2-ary -",
          "explain": "pop 2 values (1, 1); the second integer minus the first; push result (0)",
          "explain2": { "text": "pop 2 values (#+, #+); the second integer minus the first; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "1" }, { "type": "int", "value": "0" } ] },
          "npc": "35",
          "pop": "2",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "34"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (0, ?wants); push result (?wants[0])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "0" } ] } ] },
          "npc": "36",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "0" } ] } ],
          "pc": "35"
        }

      ],
      "ctxbag": {
          "7ee7fc4001fa": "1",
          "7ee80780015a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7ee7fa0001fa",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "101",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "101","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7ee80780015a",
          "fp": "1",
          "name": "dekk(0)",
          "entry": "18",
          "pc": "48",
          "sp": "3",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "0" } ] }, { "type": "bool", "value": "False" }],
          "trace": [
{"pc": "48","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "next": { "type": "Store", "var": "wants[0]", "value": { "type": "bool", "value": "False" } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7ee7fc4001fa",
          "fp": "1",
          "name": "dekk(1)",
          "entry": "18",
          "pc": "36",
          "sp": "2",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "0" } ] }],
          "trace": [
{"pc": "36","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
          ],
          "next": { "type": "Load", "var": "wants[0]" },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "237",
      "tid": "2",
      "shared": { "crit": { "type": "int", "value": "0" }, "turn": { "type": "int", "value": "0" }, "wants": { "type": "list", "value": [{ "type": "bool", "value": "True" }, { "type": "bool", "value": "True" } ] } },
      "name": "dekk(1)",
      "context": {
        "tid": "2",
        "hvalue": "7ee7fc4001fa",
        "fp": "1",
        "name": "dekk(1)",
        "entry": "18",
        "pc": "36",
        "sp": "2",
        "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "0" } ] }],
        "trace": [
{"pc": "36","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
        ],
        "next": { "type": "Load", "var": "wants[0]" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load",
          "explain": "pop address (?wants[0]) and push value (True)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "0" } ] }, { "type": "bool", "value": "True" } ] },
          "npc": "37",
          "fp": "1",
          "trace": [
{"pc": "37","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
          ],
          "pop": "1",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "36"
        },

        {
          "code": "JumpCond False 55",
          "explain": "pop value (True), compare to False, and jump to 55 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 55 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "38",
          "pop": "1",
          "push": [ ],
          "pc": "37"
        }

      ],
      "ctxbag": {
          "7ee7fc40025a": "1",
          "7ee80780015a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7ee7fa0001fa",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "101",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "101","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7ee80780015a",
          "fp": "1",
          "name": "dekk(0)",
          "entry": "18",
          "pc": "48",
          "sp": "3",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "0" } ] }, { "type": "bool", "value": "False" }],
          "trace": [
{"pc": "48","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "next": { "type": "Store", "var": "wants[0]", "value": { "type": "bool", "value": "False" } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7ee7fc40025a",
          "fp": "1",
          "name": "dekk(1)",
          "entry": "18",
          "pc": "38",
          "sp": "1",
          "stack": [{ "type": "dict", "value": [] }],
          "trace": [
{"pc": "38","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
          ],
          "next": { "type": "Load", "var": "turn" },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "239",
      "tid": "2",
      "shared": { "crit": { "type": "int", "value": "0" }, "turn": { "type": "int", "value": "0" }, "wants": { "type": "list", "value": [{ "type": "bool", "value": "True" }, { "type": "bool", "value": "True" } ] } },
      "name": "dekk(1)",
      "context": {
        "tid": "2",
        "hvalue": "7ee7fc40025a",
        "fp": "1",
        "name": "dekk(1)",
        "entry": "18",
        "pc": "38",
        "sp": "1",
        "stack": [{ "type": "dict", "value": [] }],
        "trace": [
{"pc": "38","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
        ],
        "next": { "type": "Load", "var": "turn" },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Load turn",
          "explain": "push value (0) of variable turn",
          "explain2": { "text": "push value (#+) of variable turn", "args": [ { "type": "int", "value": "0" } ] },
          "npc": "39",
          "fp": "1",
          "trace": [
{"pc": "39","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
          ],
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "38"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "40",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "39"
        },

        {
          "code": "LoadVar p_q",
          "explain": "push value (1) of variable \"p_q\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "p_q" } ] },
          "npc": "41",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "40"
        },

        {
          "code": "2-ary -",
          "explain": "pop 2 values (1, 1); the second integer minus the first; push result (0)",
          "explain2": { "text": "pop 2 values (#+, #+); the second integer minus the first; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "1" }, { "type": "int", "value": "0" } ] },
          "npc": "42",
          "pop": "2",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "41"
        },

        {
          "code": "2-ary ==",
          "explain": "pop 2 values (0, 0); check if both values are the same; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if both values are the same; push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "int", "value": "0" }, { "type": "bool", "value": "True" } ] },
          "npc": "43",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "42"
        },

        {
          "code": "JumpCond False 31",
          "explain": "pop value (True), compare to False, and jump to 31 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 31 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "44",
          "pop": "1",
          "push": [ ],
          "pc": "43"
        },

        {
          "code": "Push ?wants",
          "explain": "push constant ?wants",
          "explain2": { "text": "push constant ?wants", "args": [] },
          "npc": "45",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" } ] } ],
          "pc": "44"
        },

        {
          "code": "LoadVar p_q",
          "explain": "push value (1) of variable \"p_q\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "p_q" } ] },
          "npc": "46",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "45"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (1, ?wants); push result (?wants[1])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "1" } ] } ] },
          "npc": "47",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "1" } ] } ],
          "pc": "46"
        },

        {
          "code": "Push False",
          "explain": "push constant False",
          "explain2": { "text": "push constant False", "args": [] },
          "npc": "48",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "47"
        }

      ],
      "ctxbag": {
          "7ee7f7c0001a": "1",
          "7ee80780015a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7ee7fa0001fa",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "101",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "101","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7ee80780015a",
          "fp": "1",
          "name": "dekk(0)",
          "entry": "18",
          "pc": "48",
          "sp": "3",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "0" } ] }, { "type": "bool", "value": "False" }],
          "trace": [
{"pc": "48","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "next": { "type": "Store", "var": "wants[0]", "value": { "type": "bool", "value": "False" } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7ee7f7c0001a",
          "fp": "1",
          "name": "dekk(1)",
          "entry": "18",
          "pc": "48",
          "sp": "3",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "1" } ] }, { "type": "bool", "value": "False" }],
          "trace": [
{"pc": "48","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
          ],
          "next": { "type": "Store", "var": "wants[1]", "value": { "type": "bool", "value": "False" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "242",
      "tid": "2",
      "shared": { "crit": { "type": "int", "value": "0" }, "turn": { "type": "int", "value": "0" }, "wants": { "type": "list", "value": [{ "type": "bool", "value": "True" }, { "type": "bool", "value": "True" } ] } },
      "name": "dekk(1)",
      "context": {
        "tid": "2",
        "hvalue": "7ee7f7c0001a",
        "fp": "1",
        "name": "dekk(1)",
        "entry": "18",
        "pc": "48",
        "sp": "3",
        "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "1" } ] }, { "type": "bool", "value": "False" }],
        "trace": [
{"pc": "48","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
        ],
        "next": { "type": "Store", "var": "wants[1]", "value": { "type": "bool", "value": "False" } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Store",
          "explain": "pop value (False) and address (?wants[1]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "bool", "value": "False" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "1" } ] } ] },
          "shared": { "crit": { "type": "int", "value": "0" }, "turn": { "type": "int", "value": "0" }, "wants": { "type": "list", "value": [{ "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] } },
          "npc": "49",
          "fp": "1",
          "trace": [
{"pc": "49","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
          ],
          "pop": "2",
          "push": [ ],
          "pc": "48"
        },

        {
          "code": "Push ?wants",
          "explain": "push constant ?wants",
          "explain2": { "text": "push constant ?wants", "args": [] },
          "npc": "50",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" } ] } ],
          "pc": "49"
        },

        {
          "code": "LoadVar p_q",
          "explain": "push value (1) of variable \"p_q\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "p_q" } ] },
          "npc": "51",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "50"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (1, ?wants); push result (?wants[1])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "1" } ] } ] },
          "npc": "52",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "1" } ] } ],
          "pc": "51"
        },

        {
          "code": "Push True",
          "explain": "push constant True",
          "explain2": { "text": "push constant True", "args": [] },
          "npc": "53",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "52"
        }

      ],
      "ctxbag": {
          "7ee80540005a": "1",
          "7ee80780015a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7ee7fa0001fa",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "101",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "101","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7ee80780015a",
          "fp": "1",
          "name": "dekk(0)",
          "entry": "18",
          "pc": "48",
          "sp": "3",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "0" } ] }, { "type": "bool", "value": "False" }],
          "trace": [
{"pc": "48","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "0" },
"method": "dekk(0)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "next": { "type": "Store", "var": "wants[0]", "value": { "type": "bool", "value": "False" } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7ee80540005a",
          "fp": "1",
          "name": "dekk(1)",
          "entry": "18",
          "pc": "53",
          "sp": "3",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "wants" }, { "type": "int", "value": "1" } ] }, { "type": "bool", "value": "True" }],
          "trace": [
{"pc": "53","xpc": "18","method_name": { "type": "atom", "value": "dekk" },
"method_arg": { "type": "int", "value": "1" },
"method": "dekk(1)","calltype": "process","vars":{ "p_q": { "type": "int", "value": "1" } },"sp": 0}
          ],
          "next": { "type": "Store", "var": "wants[1]", "value": { "type": "bool", "value": "True" } },
          "mode": "runnable"
        }
      ]
    }

  ]
}
