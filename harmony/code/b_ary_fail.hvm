{
  "labels": {
    "__end__": 159
  },
  "modules": {
    "__main__": {
      "file": "b_ary_fail.hny",
      "lines": [
        "#critical reached?",
        "#invariant reached_crit in {0, 1} # safety",
        "",
        "sequential turn, lockTaken, flags",
        "turn = 0",
        "lockTaken = False",
        "flags = [False, False]",
        "counter = 0",
        "def fail0 p_q:",
        "\twhile choose {False, True}:",
        "\t\t# non crit",
        "\t\t#entering crit",
        "\t\t#crit",
        "\t\tcounter += 1",
        "\t\t#leave crit",
        "def fail1 p_q:",
        "\twhile choose {False, True}:",
        "\t\t# Enter cs",
        "\t\tawait not lockTaken",
        "\t\tlockTaken = True",
        "\t\t#cs",
        "\t\tcounter += 1",
        "\t\t#leaving cs",
        "\t\tlockTaken = False",
        "def fail2 p_q:",
        "\twhile choose {False, True}:",
        "\t\t# enter critical",
        "\t\tturn = 1 - p_q",
        "\t\tawait turn == p_q",
        "\t\t# critical",
        "\t\tcounter += 1",
        "\t\t# leaving critical",
        "\t\t# post protocol",
        "def fail3 p_q:",
        "\twhile choose {False, True}:",
        "\t\t#entering critical",
        "\t\tflags p_q = True",
        "\t\tawait not flags (1 - p_q)",
        "\t\t#crit",
        "\t\tcounter += 1",
        "\t\t#leaving",
        "\t\tflags p_q = False",
        "def fail4 p_q:",
        "\twhile choose {False, True}:",
        "\t\twhile not (turn == p_q):",
        "\t\t\tpass",
        "\t\t#cs",
        "\t\tcounter += 1",
        "\t\tturn = 1 - p_q",
        "spawn fail4 0;",
        "spawn fail4 1;"
      ],
      "identifiers": {
        "p_q": "local-const",
        "this": "local-var",
        "fail0": "constant",
        "fail1": "constant",
        "fail2": "constant",
        "fail3": "constant",
        "fail4": "constant",
        "turn": "global",
        "lockTaken": "global",
        "flags": "global",
        "counter": "global",
        "___": "___"
      }
    }
  },
  "code": [
    { "op": "Frame", "name": "__init__", "args": "()" },
    { "op": "Push", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "turn" }] } },
    { "op": "Sequential" },
    { "op": "Push", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "lockTaken" }] } },
    { "op": "Sequential" },
    { "op": "Push", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "flags" }] } },
    { "op": "Sequential" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Store", "value": [{ "type": "atom", "value": "turn"}] },
    { "op": "Push", "value": { "type": "bool", "value": "False" } },
    { "op": "Store", "value": [{ "type": "atom", "value": "lockTaken"}] },
    { "op": "Push", "value": { "type": "list", "value": [] } },
    { "op": "Push", "value": { "type": "bool", "value": "False" } },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "Push", "value": { "type": "bool", "value": "False" } },
    { "op": "Nary", "arity": 2, "value": "ListAdd" },
    { "op": "Store", "value": [{ "type": "atom", "value": "flags"}] },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Store", "value": [{ "type": "atom", "value": "counter"}] },
    { "op": "Jump", "pc": "147" },
    { "op": "Frame", "name": "fail0", "args": "p_q" },
    { "op": "DelVar", "value": "p_q" },
    { "op": "Push", "value": { "type": "set", "value": [] } },
    { "op": "Push", "value": { "type": "bool", "value": "False" } },
    { "op": "Nary", "arity": 2, "value": "SetAdd" },
    { "op": "Push", "value": { "type": "bool", "value": "True" } },
    { "op": "Nary", "arity": 2, "value": "SetAdd" },
    { "op": "Choose" },
    { "op": "JumpCond", "pc": "34", "cond": { "type": "bool", "value": "False" } },
    { "op": "Load", "value": [{ "type": "atom", "value": "counter"}] },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Nary", "arity": 2, "value": "+" },
    { "op": "Store", "value": [{ "type": "atom", "value": "counter"}] },
    { "op": "Jump", "pc": "21" },
    { "op": "Return", "result": "result", "default": { "type": "address" } },
    { "op": "Jump", "pc": "147" },
    { "op": "Frame", "name": "fail1", "args": "p_q" },
    { "op": "DelVar", "value": "p_q" },
    { "op": "Push", "value": { "type": "set", "value": [] } },
    { "op": "Push", "value": { "type": "bool", "value": "False" } },
    { "op": "Nary", "arity": 2, "value": "SetAdd" },
    { "op": "Push", "value": { "type": "bool", "value": "True" } },
    { "op": "Nary", "arity": 2, "value": "SetAdd" },
    { "op": "Choose" },
    { "op": "JumpCond", "pc": "59", "cond": { "type": "bool", "value": "False" } },
    { "op": "Load", "value": [{ "type": "atom", "value": "lockTaken"}] },
    { "op": "Nary", "arity": 1, "value": "not" },
    { "op": "JumpCond", "pc": "45", "cond": { "type": "bool", "value": "False" } },
    { "op": "Jump", "pc": "50" },
    { "op": "Jump", "pc": "45" },
    { "op": "Push", "value": { "type": "bool", "value": "True" } },
    { "op": "Store", "value": [{ "type": "atom", "value": "lockTaken"}] },
    { "op": "Load", "value": [{ "type": "atom", "value": "counter"}] },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Nary", "arity": 2, "value": "+" },
    { "op": "Store", "value": [{ "type": "atom", "value": "counter"}] },
    { "op": "Push", "value": { "type": "bool", "value": "False" } },
    { "op": "Store", "value": [{ "type": "atom", "value": "lockTaken"}] },
    { "op": "Jump", "pc": "37" },
    { "op": "Return", "result": "result", "default": { "type": "address" } },
    { "op": "Jump", "pc": "147" },
    { "op": "Frame", "name": "fail2", "args": "p_q" },
    { "op": "Push", "value": { "type": "set", "value": [] } },
    { "op": "Push", "value": { "type": "bool", "value": "False" } },
    { "op": "Nary", "arity": 2, "value": "SetAdd" },
    { "op": "Push", "value": { "type": "bool", "value": "True" } },
    { "op": "Nary", "arity": 2, "value": "SetAdd" },
    { "op": "Choose" },
    { "op": "JumpCond", "pc": "84", "cond": { "type": "bool", "value": "False" } },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "LoadVar", "value": "p_q" },
    { "op": "Nary", "arity": 2, "value": "-" },
    { "op": "Store", "value": [{ "type": "atom", "value": "turn"}] },
    { "op": "Load", "value": [{ "type": "atom", "value": "turn"}] },
    { "op": "LoadVar", "value": "p_q" },
    { "op": "Nary", "arity": 2, "value": "==" },
    { "op": "JumpCond", "pc": "73", "cond": { "type": "bool", "value": "False" } },
    { "op": "Jump", "pc": "79" },
    { "op": "Jump", "pc": "73" },
    { "op": "Load", "value": [{ "type": "atom", "value": "counter"}] },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Nary", "arity": 2, "value": "+" },
    { "op": "Store", "value": [{ "type": "atom", "value": "counter"}] },
    { "op": "Jump", "pc": "62" },
    { "op": "DelVar", "value": "p_q" },
    { "op": "Return", "result": "result", "default": { "type": "address" } },
    { "op": "Jump", "pc": "147" },
    { "op": "Frame", "name": "fail3", "args": "p_q" },
    { "op": "Push", "value": { "type": "set", "value": [] } },
    { "op": "Push", "value": { "type": "bool", "value": "False" } },
    { "op": "Nary", "arity": 2, "value": "SetAdd" },
    { "op": "Push", "value": { "type": "bool", "value": "True" } },
    { "op": "Nary", "arity": 2, "value": "SetAdd" },
    { "op": "Choose" },
    { "op": "JumpCond", "pc": "120", "cond": { "type": "bool", "value": "False" } },
    { "op": "Push", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "flags" }] } },
    { "op": "LoadVar", "value": "p_q" },
    { "op": "Nary", "arity": 2, "value": "AddArg" },
    { "op": "Push", "value": { "type": "bool", "value": "True" } },
    { "op": "Store" },
    { "op": "Push", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "flags" }] } },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "LoadVar", "value": "p_q" },
    { "op": "Nary", "arity": 2, "value": "-" },
    { "op": "Nary", "arity": 2, "value": "AddArg" },
    { "op": "Load" },
    { "op": "Nary", "arity": 1, "value": "not" },
    { "op": "JumpCond", "pc": "100", "cond": { "type": "bool", "value": "False" } },
    { "op": "Jump", "pc": "110" },
    { "op": "Jump", "pc": "100" },
    { "op": "Load", "value": [{ "type": "atom", "value": "counter"}] },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Nary", "arity": 2, "value": "+" },
    { "op": "Store", "value": [{ "type": "atom", "value": "counter"}] },
    { "op": "Push", "value": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "flags" }] } },
    { "op": "LoadVar", "value": "p_q" },
    { "op": "Nary", "arity": 2, "value": "AddArg" },
    { "op": "Push", "value": { "type": "bool", "value": "False" } },
    { "op": "Store" },
    { "op": "Jump", "pc": "88" },
    { "op": "DelVar", "value": "p_q" },
    { "op": "Return", "result": "result", "default": { "type": "address" } },
    { "op": "Jump", "pc": "147" },
    { "op": "Frame", "name": "fail4", "args": "p_q" },
    { "op": "Push", "value": { "type": "set", "value": [] } },
    { "op": "Push", "value": { "type": "bool", "value": "False" } },
    { "op": "Nary", "arity": 2, "value": "SetAdd" },
    { "op": "Push", "value": { "type": "bool", "value": "True" } },
    { "op": "Nary", "arity": 2, "value": "SetAdd" },
    { "op": "Choose" },
    { "op": "JumpCond", "pc": "145", "cond": { "type": "bool", "value": "False" } },
    { "op": "Load", "value": [{ "type": "atom", "value": "turn"}] },
    { "op": "LoadVar", "value": "p_q" },
    { "op": "Nary", "arity": 2, "value": "==" },
    { "op": "JumpCond", "pc": "136", "cond": { "type": "bool", "value": "True" } },
    { "op": "Jump", "pc": "131" },
    { "op": "Load", "value": [{ "type": "atom", "value": "counter"}] },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Nary", "arity": 2, "value": "+" },
    { "op": "Store", "value": [{ "type": "atom", "value": "counter"}] },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "LoadVar", "value": "p_q" },
    { "op": "Nary", "arity": 2, "value": "-" },
    { "op": "Store", "value": [{ "type": "atom", "value": "turn"}] },
    { "op": "Jump", "pc": "124" },
    { "op": "DelVar", "value": "p_q" },
    { "op": "Return", "result": "result", "default": { "type": "address" } },
    { "op": "Push", "value": { "type": "address", "func": { "type": "pc", "value": "123" }, "args": [] } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Nary", "arity": 2, "value": "AddArg" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Spawn", "eternal": "False" },
    { "op": "Push", "value": { "type": "address", "func": { "type": "pc", "value": "123" }, "args": [] } },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Nary", "arity": 2, "value": "AddArg" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Spawn", "eternal": "False" },
    { "op": "Return", "result": "result", "default": { "type": "address" } },
    { "op": "DelVar", "value": "result" }
  ],
  "pretty": [
    ["Frame __init__()","start of method __init__"],
    ["Push ?turn","push constant ?turn"],
    ["Sequential","sequential consistency for variable on top of stack"],
    ["Push ?lockTaken","push constant ?lockTaken"],
    ["Sequential","sequential consistency for variable on top of stack"],
    ["Push ?flags","push constant ?flags"],
    ["Sequential","sequential consistency for variable on top of stack"],
    ["Push 0","push constant 0"],
    ["Store turn","pop a value and store it in shared variable turn"],
    ["Push False","push constant False"],
    ["Store lockTaken","pop a value and store it in shared variable lockTaken"],
    ["Push ()","building a tuple: push constant ()"],
    ["Push False","push constant False"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["Push False","push constant False"],
    ["2-ary ListAdd","pop 2 values and push the result of applying ListAdd"],
    ["Store flags","pop a value and store it in shared variable flags"],
    ["Push 0","push constant 0"],
    ["Store counter","pop a value and store it in shared variable counter"],
    ["Jump 147","jump over method definition: set program counter to 147"],
    ["Frame fail0(p_q)","start of method fail0"],
    ["DelVar p_q","delete method variable p_q"],
    ["Push {}","push constant {}"],
    ["Push False","push constant False"],
    ["2-ary SetAdd","pop 2 values and push the result of applying SetAdd"],
    ["Push True","push constant True"],
    ["2-ary SetAdd","pop 2 values and push the result of applying SetAdd"],
    ["Choose","pop a set value and push one of its elements"],
    ["JumpCond False 34","pop a value and jump to 34 if the value is False"],
    ["Load counter","push value of shared variable counter"],
    ["Push 1","push constant 1"],
    ["2-ary +","pop 2 values and push the result of applying +"],
    ["Store counter","pop a value and store it in shared variable counter"],
    ["Jump 21","set program counter to 21"],
    ["ReturnOp(result. None)","restore caller method state and push result"],
    ["Jump 147","jump over method definition: set program counter to 147"],
    ["Frame fail1(p_q)","start of method fail1"],
    ["DelVar p_q","delete method variable p_q"],
    ["Push {}","push constant {}"],
    ["Push False","push constant False"],
    ["2-ary SetAdd","pop 2 values and push the result of applying SetAdd"],
    ["Push True","push constant True"],
    ["2-ary SetAdd","pop 2 values and push the result of applying SetAdd"],
    ["Choose","pop a set value and push one of its elements"],
    ["JumpCond False 59","pop a value and jump to 59 if the value is False"],
    ["Load lockTaken","push value of shared variable lockTaken"],
    ["1-ary not","pop 1 value and push the result of applying not"],
    ["JumpCond False 45","pop a value and jump to 45 if the value is False"],
    ["Jump 50","set program counter to 50"],
    ["Jump 45","set program counter to 45"],
    ["Push True","push constant True"],
    ["Store lockTaken","pop a value and store it in shared variable lockTaken"],
    ["Load counter","push value of shared variable counter"],
    ["Push 1","push constant 1"],
    ["2-ary +","pop 2 values and push the result of applying +"],
    ["Store counter","pop a value and store it in shared variable counter"],
    ["Push False","push constant False"],
    ["Store lockTaken","pop a value and store it in shared variable lockTaken"],
    ["Jump 37","set program counter to 37"],
    ["ReturnOp(result. None)","restore caller method state and push result"],
    ["Jump 147","jump over method definition: set program counter to 147"],
    ["Frame fail2(p_q)","start of method fail2"],
    ["Push {}","push constant {}"],
    ["Push False","push constant False"],
    ["2-ary SetAdd","pop 2 values and push the result of applying SetAdd"],
    ["Push True","push constant True"],
    ["2-ary SetAdd","pop 2 values and push the result of applying SetAdd"],
    ["Choose","pop a set value and push one of its elements"],
    ["JumpCond False 84","pop a value and jump to 84 if the value is False"],
    ["Push 1","push constant 1"],
    ["LoadVar p_q","push the value of p_q"],
    ["2-ary -","pop 2 values and push the result of applying -"],
    ["Store turn","pop a value and store it in shared variable turn"],
    ["Load turn","push value of shared variable turn"],
    ["LoadVar p_q","push the value of p_q"],
    ["2-ary ==","pop 2 values and push the result of applying =="],
    ["JumpCond False 73","pop a value and jump to 73 if the value is False"],
    ["Jump 79","set program counter to 79"],
    ["Jump 73","set program counter to 73"],
    ["Load counter","push value of shared variable counter"],
    ["Push 1","push constant 1"],
    ["2-ary +","pop 2 values and push the result of applying +"],
    ["Store counter","pop a value and store it in shared variable counter"],
    ["Jump 62","set program counter to 62"],
    ["DelVar p_q","delete method variable p_q"],
    ["ReturnOp(result. None)","restore caller method state and push result"],
    ["Jump 147","jump over method definition: set program counter to 147"],
    ["Frame fail3(p_q)","start of method fail3"],
    ["Push {}","push constant {}"],
    ["Push False","push constant False"],
    ["2-ary SetAdd","pop 2 values and push the result of applying SetAdd"],
    ["Push True","push constant True"],
    ["2-ary SetAdd","pop 2 values and push the result of applying SetAdd"],
    ["Choose","pop a set value and push one of its elements"],
    ["JumpCond False 120","pop a value and jump to 120 if the value is False"],
    ["Push ?flags","push constant ?flags"],
    ["LoadVar p_q","push the value of p_q"],
    ["2-ary AddArg","pop 2 values and push the result of applying AddArg"],
    ["Push True","push constant True"],
    ["Store","pop a value and an address and store the value at the address"],
    ["Push ?flags","push constant ?flags"],
    ["Push 1","push constant 1"],
    ["LoadVar p_q","push the value of p_q"],
    ["2-ary -","pop 2 values and push the result of applying -"],
    ["2-ary AddArg","pop 2 values and push the result of applying AddArg"],
    ["Load","pop an address and push the value at the address"],
    ["1-ary not","pop 1 value and push the result of applying not"],
    ["JumpCond False 100","pop a value and jump to 100 if the value is False"],
    ["Jump 110","set program counter to 110"],
    ["Jump 100","set program counter to 100"],
    ["Load counter","push value of shared variable counter"],
    ["Push 1","push constant 1"],
    ["2-ary +","pop 2 values and push the result of applying +"],
    ["Store counter","pop a value and store it in shared variable counter"],
    ["Push ?flags","push constant ?flags"],
    ["LoadVar p_q","push the value of p_q"],
    ["2-ary AddArg","pop 2 values and push the result of applying AddArg"],
    ["Push False","push constant False"],
    ["Store","pop a value and an address and store the value at the address"],
    ["Jump 88","set program counter to 88"],
    ["DelVar p_q","delete method variable p_q"],
    ["ReturnOp(result. None)","restore caller method state and push result"],
    ["Jump 147","jump over method definition: set program counter to 147"],
    ["Frame fail4(p_q)","start of method fail4"],
    ["Push {}","push constant {}"],
    ["Push False","push constant False"],
    ["2-ary SetAdd","pop 2 values and push the result of applying SetAdd"],
    ["Push True","push constant True"],
    ["2-ary SetAdd","pop 2 values and push the result of applying SetAdd"],
    ["Choose","pop a set value and push one of its elements"],
    ["JumpCond False 145","pop a value and jump to 145 if the value is False"],
    ["Load turn","push value of shared variable turn"],
    ["LoadVar p_q","push the value of p_q"],
    ["2-ary ==","pop 2 values and push the result of applying =="],
    ["JumpCond True 136","pop a value and jump to 136 if the value is True"],
    ["Jump 131","set program counter to 131"],
    ["Load counter","push value of shared variable counter"],
    ["Push 1","push constant 1"],
    ["2-ary +","pop 2 values and push the result of applying +"],
    ["Store counter","pop a value and store it in shared variable counter"],
    ["Push 1","push constant 1"],
    ["LoadVar p_q","push the value of p_q"],
    ["2-ary -","pop 2 values and push the result of applying -"],
    ["Store turn","pop a value and store it in shared variable turn"],
    ["Jump 124","set program counter to 124"],
    ["DelVar p_q","delete method variable p_q"],
    ["ReturnOp(result. None)","restore caller method state and push result"],
    ["Push ?PC(123)","push constant ?PC(123)"],
    ["Push 0","push constant 0"],
    ["2-ary AddArg","pop 2 values and push the result of applying AddArg"],
    ["Push {:}","push constant {:}"],
    ["Spawn","pop thread-local state, argument, and pc and spawn a new thread"],
    ["Push ?PC(123)","push constant ?PC(123)"],
    ["Push 1","push constant 1"],
    ["2-ary AddArg","pop 2 values and push the result of applying AddArg"],
    ["Push {:}","push constant {:}"],
    ["Spawn","pop thread-local state, argument, and pc and spawn a new thread"],
    ["ReturnOp(result. None)","restore caller method state and push result"],
    ["DelVar result","delete method variable result"]
  ],
  "locs": [
    { "module": "__main__", "line": 4, "column": 1, "endline": 52, "endcolumn": 7, "stmt": [4,1,52,7] },
    { "module": "__main__", "line": 4, "column": 12, "endline": 4, "endcolumn": 15, "stmt": [4,1,4,33] },
    { "module": "__main__", "line": 4, "column": 1, "endline": 4, "endcolumn": 33, "stmt": [4,1,4,33] },
    { "module": "__main__", "line": 4, "column": 18, "endline": 4, "endcolumn": 26, "stmt": [4,1,4,33] },
    { "module": "__main__", "line": 4, "column": 1, "endline": 4, "endcolumn": 33, "stmt": [4,1,4,33] },
    { "module": "__main__", "line": 4, "column": 29, "endline": 4, "endcolumn": 33, "stmt": [4,1,4,33] },
    { "module": "__main__", "line": 4, "column": 1, "endline": 4, "endcolumn": 33, "stmt": [4,1,4,33] },
    { "module": "__main__", "line": 5, "column": 8, "endline": 5, "endcolumn": 8, "stmt": [5,1,5,8] },
    { "module": "__main__", "line": 5, "column": 1, "endline": 5, "endcolumn": 6, "stmt": [5,1,5,8] },
    { "module": "__main__", "line": 6, "column": 13, "endline": 6, "endcolumn": 17, "stmt": [6,1,6,17] },
    { "module": "__main__", "line": 6, "column": 1, "endline": 6, "endcolumn": 11, "stmt": [6,1,6,17] },
    { "module": "__main__", "line": 7, "column": 10, "endline": 7, "endcolumn": 21, "stmt": [7,1,7,22] },
    { "module": "__main__", "line": 7, "column": 10, "endline": 7, "endcolumn": 14, "stmt": [7,1,7,22] },
    { "module": "__main__", "line": 7, "column": 10, "endline": 7, "endcolumn": 21, "stmt": [7,1,7,22] },
    { "module": "__main__", "line": 7, "column": 17, "endline": 7, "endcolumn": 21, "stmt": [7,1,7,22] },
    { "module": "__main__", "line": 7, "column": 10, "endline": 7, "endcolumn": 21, "stmt": [7,1,7,22] },
    { "module": "__main__", "line": 7, "column": 1, "endline": 7, "endcolumn": 7, "stmt": [7,1,7,22] },
    { "module": "__main__", "line": 8, "column": 11, "endline": 8, "endcolumn": 11, "stmt": [8,1,8,11] },
    { "module": "__main__", "line": 8, "column": 1, "endline": 8, "endcolumn": 9, "stmt": [8,1,8,11] },
    { "module": "__main__", "line": 9, "column": 1, "endline": 9, "endcolumn": 3, "stmt": [9,1,9,14] },
    { "module": "__main__", "line": 9, "column": 1, "endline": 9, "endcolumn": 14, "stmt": [9,1,9,14] },
    { "module": "__main__", "line": 10, "column": 16, "endline": 10, "endcolumn": 26, "stmt": [10,2,10,28] },
    { "module": "__main__", "line": 10, "column": 16, "endline": 10, "endcolumn": 26, "stmt": [10,2,10,28] },
    { "module": "__main__", "line": 10, "column": 16, "endline": 10, "endcolumn": 20, "stmt": [10,2,10,28] },
    { "module": "__main__", "line": 10, "column": 16, "endline": 10, "endcolumn": 26, "stmt": [10,2,10,28] },
    { "module": "__main__", "line": 10, "column": 23, "endline": 10, "endcolumn": 26, "stmt": [10,2,10,28] },
    { "module": "__main__", "line": 10, "column": 16, "endline": 10, "endcolumn": 26, "stmt": [10,2,10,28] },
    { "module": "__main__", "line": 10, "column": 8, "endline": 10, "endcolumn": 27, "stmt": [10,2,10,28] },
    { "module": "__main__", "line": 10, "column": 2, "endline": 10, "endcolumn": 6, "stmt": [10,2,10,28] },
    { "module": "__main__", "line": 14, "column": 3, "endline": 14, "endcolumn": 14, "stmt": [14,3,14,14] },
    { "module": "__main__", "line": 14, "column": 14, "endline": 14, "endcolumn": 14, "stmt": [14,3,14,14] },
    { "module": "__main__", "line": 14, "column": 3, "endline": 14, "endcolumn": 14, "stmt": [14,3,14,14] },
    { "module": "__main__", "line": 14, "column": 3, "endline": 14, "endcolumn": 12, "stmt": [14,3,14,14] },
    { "module": "__main__", "line": 10, "column": 2, "endline": 10, "endcolumn": 28, "stmt": [10,2,10,28] },
    { "module": "__main__", "line": 9, "column": 1, "endline": 9, "endcolumn": 14, "stmt": [9,1,9,14] },
    { "module": "__main__", "line": 16, "column": 1, "endline": 16, "endcolumn": 3, "stmt": [16,1,16,14] },
    { "module": "__main__", "line": 16, "column": 1, "endline": 16, "endcolumn": 14, "stmt": [16,1,16,14] },
    { "module": "__main__", "line": 17, "column": 16, "endline": 17, "endcolumn": 26, "stmt": [17,2,17,28] },
    { "module": "__main__", "line": 17, "column": 16, "endline": 17, "endcolumn": 26, "stmt": [17,2,17,28] },
    { "module": "__main__", "line": 17, "column": 16, "endline": 17, "endcolumn": 20, "stmt": [17,2,17,28] },
    { "module": "__main__", "line": 17, "column": 16, "endline": 17, "endcolumn": 26, "stmt": [17,2,17,28] },
    { "module": "__main__", "line": 17, "column": 23, "endline": 17, "endcolumn": 26, "stmt": [17,2,17,28] },
    { "module": "__main__", "line": 17, "column": 16, "endline": 17, "endcolumn": 26, "stmt": [17,2,17,28] },
    { "module": "__main__", "line": 17, "column": 8, "endline": 17, "endcolumn": 27, "stmt": [17,2,17,28] },
    { "module": "__main__", "line": 17, "column": 2, "endline": 17, "endcolumn": 6, "stmt": [17,2,17,28] },
    { "module": "__main__", "line": 19, "column": 13, "endline": 19, "endcolumn": 21, "stmt": [19,3,19,21] },
    { "module": "__main__", "line": 19, "column": 9, "endline": 19, "endcolumn": 21, "stmt": [19,3,19,21] },
    { "module": "__main__", "line": 19, "column": 3, "endline": 19, "endcolumn": 21, "stmt": [19,3,19,21] },
    { "module": "__main__", "line": 19, "column": 13, "endline": 19, "endcolumn": 21, "stmt": [19,3,19,21] },
    { "module": "__main__", "line": 19, "column": 13, "endline": 19, "endcolumn": 21, "stmt": [19,3,19,21] },
    { "module": "__main__", "line": 20, "column": 15, "endline": 20, "endcolumn": 18, "stmt": [20,3,20,18] },
    { "module": "__main__", "line": 20, "column": 3, "endline": 20, "endcolumn": 13, "stmt": [20,3,20,18] },
    { "module": "__main__", "line": 22, "column": 3, "endline": 22, "endcolumn": 14, "stmt": [22,3,22,14] },
    { "module": "__main__", "line": 22, "column": 14, "endline": 22, "endcolumn": 14, "stmt": [22,3,22,14] },
    { "module": "__main__", "line": 22, "column": 3, "endline": 22, "endcolumn": 14, "stmt": [22,3,22,14] },
    { "module": "__main__", "line": 22, "column": 3, "endline": 22, "endcolumn": 12, "stmt": [22,3,22,14] },
    { "module": "__main__", "line": 24, "column": 15, "endline": 24, "endcolumn": 19, "stmt": [24,3,24,19] },
    { "module": "__main__", "line": 24, "column": 3, "endline": 24, "endcolumn": 13, "stmt": [24,3,24,19] },
    { "module": "__main__", "line": 17, "column": 2, "endline": 17, "endcolumn": 28, "stmt": [17,2,17,28] },
    { "module": "__main__", "line": 16, "column": 1, "endline": 16, "endcolumn": 14, "stmt": [16,1,16,14] },
    { "module": "__main__", "line": 25, "column": 1, "endline": 25, "endcolumn": 3, "stmt": [25,1,25,14] },
    { "module": "__main__", "line": 25, "column": 1, "endline": 25, "endcolumn": 14, "stmt": [25,1,25,14] },
    { "module": "__main__", "line": 26, "column": 16, "endline": 26, "endcolumn": 26, "stmt": [26,2,26,28] },
    { "module": "__main__", "line": 26, "column": 16, "endline": 26, "endcolumn": 20, "stmt": [26,2,26,28] },
    { "module": "__main__", "line": 26, "column": 16, "endline": 26, "endcolumn": 26, "stmt": [26,2,26,28] },
    { "module": "__main__", "line": 26, "column": 23, "endline": 26, "endcolumn": 26, "stmt": [26,2,26,28] },
    { "module": "__main__", "line": 26, "column": 16, "endline": 26, "endcolumn": 26, "stmt": [26,2,26,28] },
    { "module": "__main__", "line": 26, "column": 8, "endline": 26, "endcolumn": 27, "stmt": [26,2,26,28] },
    { "module": "__main__", "line": 26, "column": 2, "endline": 26, "endcolumn": 6, "stmt": [26,2,26,28] },
    { "module": "__main__", "line": 28, "column": 10, "endline": 28, "endcolumn": 10, "stmt": [28,3,28,16] },
    { "module": "__main__", "line": 28, "column": 14, "endline": 28, "endcolumn": 16, "stmt": [28,3,28,16] },
    { "module": "__main__", "line": 28, "column": 10, "endline": 28, "endcolumn": 16, "stmt": [28,3,28,16] },
    { "module": "__main__", "line": 28, "column": 3, "endline": 28, "endcolumn": 8, "stmt": [28,3,28,16] },
    { "module": "__main__", "line": 29, "column": 9, "endline": 29, "endcolumn": 12, "stmt": [29,3,29,19] },
    { "module": "__main__", "line": 29, "column": 17, "endline": 29, "endcolumn": 19, "stmt": [29,3,29,19] },
    { "module": "__main__", "line": 29, "column": 9, "endline": 29, "endcolumn": 19, "stmt": [29,3,29,19] },
    { "module": "__main__", "line": 29, "column": 3, "endline": 29, "endcolumn": 19, "stmt": [29,3,29,19] },
    { "module": "__main__", "line": 29, "column": 17, "endline": 29, "endcolumn": 19, "stmt": [29,3,29,19] },
    { "module": "__main__", "line": 29, "column": 17, "endline": 29, "endcolumn": 19, "stmt": [29,3,29,19] },
    { "module": "__main__", "line": 31, "column": 3, "endline": 31, "endcolumn": 14, "stmt": [31,3,31,14] },
    { "module": "__main__", "line": 31, "column": 14, "endline": 31, "endcolumn": 14, "stmt": [31,3,31,14] },
    { "module": "__main__", "line": 31, "column": 3, "endline": 31, "endcolumn": 14, "stmt": [31,3,31,14] },
    { "module": "__main__", "line": 31, "column": 3, "endline": 31, "endcolumn": 12, "stmt": [31,3,31,14] },
    { "module": "__main__", "line": 26, "column": 2, "endline": 26, "endcolumn": 28, "stmt": [26,2,26,28] },
    { "module": "__main__", "line": 25, "column": 1, "endline": 25, "endcolumn": 14, "stmt": [25,1,25,14] },
    { "module": "__main__", "line": 25, "column": 1, "endline": 25, "endcolumn": 14, "stmt": [25,1,25,14] },
    { "module": "__main__", "line": 34, "column": 1, "endline": 34, "endcolumn": 3, "stmt": [34,1,34,14] },
    { "module": "__main__", "line": 34, "column": 1, "endline": 34, "endcolumn": 14, "stmt": [34,1,34,14] },
    { "module": "__main__", "line": 35, "column": 16, "endline": 35, "endcolumn": 26, "stmt": [35,2,35,28] },
    { "module": "__main__", "line": 35, "column": 16, "endline": 35, "endcolumn": 20, "stmt": [35,2,35,28] },
    { "module": "__main__", "line": 35, "column": 16, "endline": 35, "endcolumn": 26, "stmt": [35,2,35,28] },
    { "module": "__main__", "line": 35, "column": 23, "endline": 35, "endcolumn": 26, "stmt": [35,2,35,28] },
    { "module": "__main__", "line": 35, "column": 16, "endline": 35, "endcolumn": 26, "stmt": [35,2,35,28] },
    { "module": "__main__", "line": 35, "column": 8, "endline": 35, "endcolumn": 27, "stmt": [35,2,35,28] },
    { "module": "__main__", "line": 35, "column": 2, "endline": 35, "endcolumn": 6, "stmt": [35,2,35,28] },
    { "module": "__main__", "line": 37, "column": 3, "endline": 37, "endcolumn": 7, "stmt": [37,3,37,18] },
    { "module": "__main__", "line": 37, "column": 9, "endline": 37, "endcolumn": 11, "stmt": [37,3,37,18] },
    { "module": "__main__", "line": 37, "column": 3, "endline": 37, "endcolumn": 11, "stmt": [37,3,37,18] },
    { "module": "__main__", "line": 37, "column": 15, "endline": 37, "endcolumn": 18, "stmt": [37,3,37,18] },
    { "module": "__main__", "line": 37, "column": 3, "endline": 37, "endcolumn": 13, "stmt": [37,3,37,18] },
    { "module": "__main__", "line": 38, "column": 13, "endline": 38, "endcolumn": 27, "stmt": [38,3,38,27] },
    { "module": "__main__", "line": 38, "column": 20, "endline": 38, "endcolumn": 20, "stmt": [38,3,38,27] },
    { "module": "__main__", "line": 38, "column": 24, "endline": 38, "endcolumn": 26, "stmt": [38,3,38,27] },
    { "module": "__main__", "line": 38, "column": 20, "endline": 38, "endcolumn": 26, "stmt": [38,3,38,27] },
    { "module": "__main__", "line": 38, "column": 13, "endline": 38, "endcolumn": 27, "stmt": [38,3,38,27] },
    { "module": "__main__", "line": 38, "column": 13, "endline": 38, "endcolumn": 27, "stmt": [38,3,38,27] },
    { "module": "__main__", "line": 38, "column": 9, "endline": 38, "endcolumn": 27, "stmt": [38,3,38,27] },
    { "module": "__main__", "line": 38, "column": 3, "endline": 38, "endcolumn": 27, "stmt": [38,3,38,27] },
    { "module": "__main__", "line": 38, "column": 27, "endline": 38, "endcolumn": 27, "stmt": [38,3,38,27] },
    { "module": "__main__", "line": 38, "column": 27, "endline": 38, "endcolumn": 27, "stmt": [38,3,38,27] },
    { "module": "__main__", "line": 40, "column": 3, "endline": 40, "endcolumn": 14, "stmt": [40,3,40,14] },
    { "module": "__main__", "line": 40, "column": 14, "endline": 40, "endcolumn": 14, "stmt": [40,3,40,14] },
    { "module": "__main__", "line": 40, "column": 3, "endline": 40, "endcolumn": 14, "stmt": [40,3,40,14] },
    { "module": "__main__", "line": 40, "column": 3, "endline": 40, "endcolumn": 12, "stmt": [40,3,40,14] },
    { "module": "__main__", "line": 42, "column": 3, "endline": 42, "endcolumn": 7, "stmt": [42,3,42,19] },
    { "module": "__main__", "line": 42, "column": 9, "endline": 42, "endcolumn": 11, "stmt": [42,3,42,19] },
    { "module": "__main__", "line": 42, "column": 3, "endline": 42, "endcolumn": 11, "stmt": [42,3,42,19] },
    { "module": "__main__", "line": 42, "column": 15, "endline": 42, "endcolumn": 19, "stmt": [42,3,42,19] },
    { "module": "__main__", "line": 42, "column": 3, "endline": 42, "endcolumn": 13, "stmt": [42,3,42,19] },
    { "module": "__main__", "line": 35, "column": 2, "endline": 35, "endcolumn": 28, "stmt": [35,2,35,28] },
    { "module": "__main__", "line": 34, "column": 1, "endline": 34, "endcolumn": 14, "stmt": [34,1,34,14] },
    { "module": "__main__", "line": 34, "column": 1, "endline": 34, "endcolumn": 14, "stmt": [34,1,34,14] },
    { "module": "__main__", "line": 43, "column": 1, "endline": 43, "endcolumn": 3, "stmt": [43,1,43,14] },
    { "module": "__main__", "line": 43, "column": 1, "endline": 43, "endcolumn": 14, "stmt": [43,1,43,14] },
    { "module": "__main__", "line": 44, "column": 16, "endline": 44, "endcolumn": 26, "stmt": [44,2,44,28] },
    { "module": "__main__", "line": 44, "column": 16, "endline": 44, "endcolumn": 20, "stmt": [44,2,44,28] },
    { "module": "__main__", "line": 44, "column": 16, "endline": 44, "endcolumn": 26, "stmt": [44,2,44,28] },
    { "module": "__main__", "line": 44, "column": 23, "endline": 44, "endcolumn": 26, "stmt": [44,2,44,28] },
    { "module": "__main__", "line": 44, "column": 16, "endline": 44, "endcolumn": 26, "stmt": [44,2,44,28] },
    { "module": "__main__", "line": 44, "column": 8, "endline": 44, "endcolumn": 27, "stmt": [44,2,44,28] },
    { "module": "__main__", "line": 44, "column": 2, "endline": 44, "endcolumn": 6, "stmt": [44,2,44,28] },
    { "module": "__main__", "line": 45, "column": 14, "endline": 45, "endcolumn": 17, "stmt": [45,3,45,26] },
    { "module": "__main__", "line": 45, "column": 22, "endline": 45, "endcolumn": 24, "stmt": [45,3,45,26] },
    { "module": "__main__", "line": 45, "column": 14, "endline": 45, "endcolumn": 24, "stmt": [45,3,45,26] },
    { "module": "__main__", "line": 45, "column": 3, "endline": 45, "endcolumn": 7, "stmt": [45,3,45,26] },
    { "module": "__main__", "line": 45, "column": 3, "endline": 45, "endcolumn": 26, "stmt": [45,3,45,26] },
    { "module": "__main__", "line": 48, "column": 3, "endline": 48, "endcolumn": 14, "stmt": [48,3,48,14] },
    { "module": "__main__", "line": 48, "column": 14, "endline": 48, "endcolumn": 14, "stmt": [48,3,48,14] },
    { "module": "__main__", "line": 48, "column": 3, "endline": 48, "endcolumn": 14, "stmt": [48,3,48,14] },
    { "module": "__main__", "line": 48, "column": 3, "endline": 48, "endcolumn": 12, "stmt": [48,3,48,14] },
    { "module": "__main__", "line": 49, "column": 10, "endline": 49, "endcolumn": 10, "stmt": [49,3,49,16] },
    { "module": "__main__", "line": 49, "column": 14, "endline": 49, "endcolumn": 16, "stmt": [49,3,49,16] },
    { "module": "__main__", "line": 49, "column": 10, "endline": 49, "endcolumn": 16, "stmt": [49,3,49,16] },
    { "module": "__main__", "line": 49, "column": 3, "endline": 49, "endcolumn": 8, "stmt": [49,3,49,16] },
    { "module": "__main__", "line": 44, "column": 2, "endline": 44, "endcolumn": 28, "stmt": [44,2,44,28] },
    { "module": "__main__", "line": 43, "column": 1, "endline": 43, "endcolumn": 14, "stmt": [43,1,43,14] },
    { "module": "__main__", "line": 43, "column": 1, "endline": 43, "endcolumn": 14, "stmt": [43,1,43,14] },
    { "module": "__main__", "line": 50, "column": 7, "endline": 50, "endcolumn": 11, "stmt": [50,1,50,13] },
    { "module": "__main__", "line": 50, "column": 13, "endline": 50, "endcolumn": 13, "stmt": [50,1,50,13] },
    { "module": "__main__", "line": 50, "column": 7, "endline": 50, "endcolumn": 13, "stmt": [50,1,50,13] },
    { "module": "__main__", "line": 50, "column": 1, "endline": 50, "endcolumn": 13, "stmt": [50,1,50,13] },
    { "module": "__main__", "line": 50, "column": 1, "endline": 50, "endcolumn": 13, "stmt": [50,1,50,13] },
    { "module": "__main__", "line": 51, "column": 7, "endline": 51, "endcolumn": 11, "stmt": [51,1,51,13] },
    { "module": "__main__", "line": 51, "column": 13, "endline": 51, "endcolumn": 13, "stmt": [51,1,51,13] },
    { "module": "__main__", "line": 51, "column": 7, "endline": 51, "endcolumn": 13, "stmt": [51,1,51,13] },
    { "module": "__main__", "line": 51, "column": 1, "endline": 51, "endcolumn": 13, "stmt": [51,1,51,13] },
    { "module": "__main__", "line": 51, "column": 1, "endline": 51, "endcolumn": 13, "stmt": [51,1,51,13] },
    { "module": "__main__", "line": 4, "column": 1, "endline": 52, "endcolumn": 7, "stmt": [4,1,52,7] },
    { "module": "__main__", "line": 4, "column": 1, "endline": 52, "endcolumn": 7, "stmt": [4,1,52,7] }
  ]
}
