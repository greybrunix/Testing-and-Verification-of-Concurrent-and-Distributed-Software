procedure StarvationAlgorithm:
    var mutex: Semaphore = 1
    var turn: int = 1

    procedure CriticalSection(threadID: int):
        loop:
            wait(mutex)
            if turn != threadID:
                signal(mutex)
                continue // Another thread is in the critical section, so wait.
            // Execute critical section
            // ...
            // End of critical section
            turn = (turn mod N) + 1 // N is the total number of threads
            signal(mutex)
            exit loop

    // Each thread executes this code
    loop:
        CriticalSection(threadID)
        // Non-critical section code
        // ...
