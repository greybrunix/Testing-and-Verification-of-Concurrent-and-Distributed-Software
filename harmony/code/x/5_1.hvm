{
  "labels": {
    "__end__": 54
  },
  "modules": {
    "__main__": {
      "file": "5_1.hny",
      "lines": [
        "in_cs = 0",
        "invariant in_cs in {0 , 1}",
        "",
        "def thread():",
        "\twhile choose { False,True }:",
        "\t\tawait False;",
        "\t\tatomically in_cs +=1;",
        "",
        "\t\tpass",
        "",
        "\t\tatomically in_cs -=1;",
        "",
        "spawn thread();",
        "spawn thread();"
      ],
      "identifiers": {
        "this": "local-var",
        "thread": "constant",
        "in_cs": "global",
        "___": "___"
      }
    }
  },
  "code": [
    { "op": "Frame", "name": "__init__", "args": "()" },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Store", "value": [{ "type": "atom", "value": "in_cs"}] },
    { "op": "Jump", "pc": "14" },
    { "op": "Frame", "name": "invariant", "args": "()" },
    { "op": "Load", "value": [{ "type": "atom", "value": "in_cs"}] },
    { "op": "Push", "value": { "type": "set", "value": [] } },
    { "op": "Push", "value": { "type": "int", "value": 0 } },
    { "op": "Nary", "arity": 2, "value": "SetAdd" },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Nary", "arity": 2, "value": "SetAdd" },
    { "op": "Nary", "arity": 2, "value": "in" },
    { "op": "Assert" },
    { "op": "Return", "result": "result", "default": { "type": "address" } },
    { "op": "Invariant", "pre": "False", "pc": "4" },
    { "op": "Jump", "pc": "42" },
    { "op": "Frame", "name": "thread", "args": "()" },
    { "op": "Push", "value": { "type": "set", "value": [] } },
    { "op": "Push", "value": { "type": "bool", "value": "False" } },
    { "op": "Nary", "arity": 2, "value": "SetAdd" },
    { "op": "Push", "value": { "type": "bool", "value": "True" } },
    { "op": "Nary", "arity": 2, "value": "SetAdd" },
    { "op": "Choose" },
    { "op": "JumpCond", "pc": "41", "cond": { "type": "bool", "value": "False" } },
    { "op": "Push", "value": { "type": "bool", "value": "False" } },
    { "op": "JumpCond", "pc": "24", "cond": { "type": "bool", "value": "False" } },
    { "op": "Jump", "pc": "28" },
    { "op": "Jump", "pc": "24" },
    { "op": "AtomicInc", "lazy": "False" },
    { "op": "Load", "value": [{ "type": "atom", "value": "in_cs"}] },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Nary", "arity": 2, "value": "+" },
    { "op": "Store", "value": [{ "type": "atom", "value": "in_cs"}] },
    { "op": "AtomicDec" },
    { "op": "AtomicInc", "lazy": "False" },
    { "op": "Load", "value": [{ "type": "atom", "value": "in_cs"}] },
    { "op": "Push", "value": { "type": "int", "value": 1 } },
    { "op": "Nary", "arity": 2, "value": "-" },
    { "op": "Store", "value": [{ "type": "atom", "value": "in_cs"}] },
    { "op": "AtomicDec" },
    { "op": "Jump", "pc": "17" },
    { "op": "Return", "result": "result", "default": { "type": "address" } },
    { "op": "Push", "value": { "type": "address", "func": { "type": "pc", "value": "16" }, "args": [] } },
    { "op": "Push", "value": { "type": "list", "value": [] } },
    { "op": "Nary", "arity": 2, "value": "AddArg" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Spawn", "eternal": "False" },
    { "op": "Push", "value": { "type": "address", "func": { "type": "pc", "value": "16" }, "args": [] } },
    { "op": "Push", "value": { "type": "list", "value": [] } },
    { "op": "Nary", "arity": 2, "value": "AddArg" },
    { "op": "Push", "value": { "type": "dict", "value": [] } },
    { "op": "Spawn", "eternal": "False" },
    { "op": "Return", "result": "result", "default": { "type": "address" } },
    { "op": "DelVar", "value": "result" }
  ],
  "pretty": [
    ["Frame __init__()","start of method __init__"],
    ["Push 0","push constant 0"],
    ["Store in_cs","pop a value and store it in shared variable in_cs"],
    ["Jump 14","jump over invariant definition: set program counter to 14"],
    ["Frame invariant()","start of method invariant"],
    ["Load in_cs","push value of shared variable in_cs"],
    ["Push {}","push constant {}"],
    ["Push 0","push constant 0"],
    ["2-ary SetAdd","pop 2 values and push the result of applying SetAdd"],
    ["Push 1","push constant 1"],
    ["2-ary SetAdd","pop 2 values and push the result of applying SetAdd"],
    ["2-ary in","pop 2 values and push the result of applying in"],
    ["Assert","pop a condition and raise exception if condition is false"],
    ["ReturnOp(result. None)","restore caller method state and push result"],
    ["Invariant 4","test invariant"],
    ["Jump 42","jump over method definition: set program counter to 42"],
    ["Frame thread()","start of method thread"],
    ["Push {}","push constant {}"],
    ["Push False","push constant False"],
    ["2-ary SetAdd","pop 2 values and push the result of applying SetAdd"],
    ["Push True","push constant True"],
    ["2-ary SetAdd","pop 2 values and push the result of applying SetAdd"],
    ["Choose","pop a set value and push one of its elements"],
    ["JumpCond False 41","pop a value and jump to 41 if the value is False"],
    ["Push False","push constant False"],
    ["JumpCond False 24","pop a value and jump to 24 if the value is False"],
    ["Jump 28","set program counter to 28"],
    ["Jump 24","set program counter to 24"],
    ["AtomicInc(eager)","increment atomic counter of context; thread runs uninterrupted if larger than 0"],
    ["Load in_cs","push value of shared variable in_cs"],
    ["Push 1","push constant 1"],
    ["2-ary +","pop 2 values and push the result of applying +"],
    ["Store in_cs","pop a value and store it in shared variable in_cs"],
    ["AtomicDec","decrement atomic counter of context"],
    ["AtomicInc(eager)","increment atomic counter of context; thread runs uninterrupted if larger than 0"],
    ["Load in_cs","push value of shared variable in_cs"],
    ["Push 1","push constant 1"],
    ["2-ary -","pop 2 values and push the result of applying -"],
    ["Store in_cs","pop a value and store it in shared variable in_cs"],
    ["AtomicDec","decrement atomic counter of context"],
    ["Jump 17","set program counter to 17"],
    ["ReturnOp(result. None)","restore caller method state and push result"],
    ["Push ?PC(16)","push constant ?PC(16)"],
    ["Push ()","push constant ()"],
    ["2-ary AddArg","pop 2 values and push the result of applying AddArg"],
    ["Push {:}","push constant {:}"],
    ["Spawn","pop thread-local state, argument, and pc and spawn a new thread"],
    ["Push ?PC(16)","push constant ?PC(16)"],
    ["Push ()","push constant ()"],
    ["2-ary AddArg","pop 2 values and push the result of applying AddArg"],
    ["Push {:}","push constant {:}"],
    ["Spawn","pop thread-local state, argument, and pc and spawn a new thread"],
    ["ReturnOp(result. None)","restore caller method state and push result"],
    ["DelVar result","delete method variable result"]
  ],
  "locs": [
    { "module": "__main__", "line": 1, "column": 1, "endline": 15, "endcolumn": 7, "stmt": [1,1,15,7] },
    { "module": "__main__", "line": 1, "column": 9, "endline": 1, "endcolumn": 9, "stmt": [1,1,1,9] },
    { "module": "__main__", "line": 1, "column": 1, "endline": 1, "endcolumn": 7, "stmt": [1,1,1,9] },
    { "module": "__main__", "line": 2, "column": 1, "endline": 2, "endcolumn": 9, "stmt": [2,1,2,26] },
    { "module": "__main__", "line": 2, "column": 1, "endline": 2, "endcolumn": 26, "stmt": [2,1,2,26] },
    { "module": "__main__", "line": 2, "column": 11, "endline": 2, "endcolumn": 15, "stmt": [2,1,2,26] },
    { "module": "__main__", "line": 2, "column": 21, "endline": 2, "endcolumn": 25, "stmt": [2,1,2,26] },
    { "module": "__main__", "line": 2, "column": 21, "endline": 2, "endcolumn": 21, "stmt": [2,1,2,26] },
    { "module": "__main__", "line": 2, "column": 21, "endline": 2, "endcolumn": 25, "stmt": [2,1,2,26] },
    { "module": "__main__", "line": 2, "column": 25, "endline": 2, "endcolumn": 25, "stmt": [2,1,2,26] },
    { "module": "__main__", "line": 2, "column": 21, "endline": 2, "endcolumn": 25, "stmt": [2,1,2,26] },
    { "module": "__main__", "line": 2, "column": 11, "endline": 2, "endcolumn": 26, "stmt": [2,1,2,26] },
    { "module": "__main__", "line": 2, "column": 1, "endline": 2, "endcolumn": 26, "stmt": [2,1,2,26] },
    { "module": "__main__", "line": 2, "column": 1, "endline": 2, "endcolumn": 26, "stmt": [2,1,2,26] },
    { "module": "__main__", "line": 2, "column": 1, "endline": 2, "endcolumn": 26, "stmt": [2,1,2,26] },
    { "module": "__main__", "line": 4, "column": 1, "endline": 4, "endcolumn": 3, "stmt": [4,1,4,13] },
    { "module": "__main__", "line": 4, "column": 1, "endline": 4, "endcolumn": 13, "stmt": [4,1,4,13] },
    { "module": "__main__", "line": 5, "column": 17, "endline": 5, "endcolumn": 26, "stmt": [5,2,5,29] },
    { "module": "__main__", "line": 5, "column": 17, "endline": 5, "endcolumn": 21, "stmt": [5,2,5,29] },
    { "module": "__main__", "line": 5, "column": 17, "endline": 5, "endcolumn": 26, "stmt": [5,2,5,29] },
    { "module": "__main__", "line": 5, "column": 23, "endline": 5, "endcolumn": 26, "stmt": [5,2,5,29] },
    { "module": "__main__", "line": 5, "column": 17, "endline": 5, "endcolumn": 26, "stmt": [5,2,5,29] },
    { "module": "__main__", "line": 5, "column": 8, "endline": 5, "endcolumn": 28, "stmt": [5,2,5,29] },
    { "module": "__main__", "line": 5, "column": 2, "endline": 5, "endcolumn": 6, "stmt": [5,2,5,29] },
    { "module": "__main__", "line": 6, "column": 9, "endline": 6, "endcolumn": 13, "stmt": [6,3,6,13] },
    { "module": "__main__", "line": 6, "column": 3, "endline": 6, "endcolumn": 13, "stmt": [6,3,6,13] },
    { "module": "__main__", "line": 6, "column": 9, "endline": 6, "endcolumn": 13, "stmt": [6,3,6,13] },
    { "module": "__main__", "line": 6, "column": 9, "endline": 6, "endcolumn": 13, "stmt": [6,3,6,13] },
    { "module": "__main__", "line": 7, "column": 14, "endline": 7, "endcolumn": 22, "stmt": [7,14,7,22] },
    { "module": "__main__", "line": 7, "column": 14, "endline": 7, "endcolumn": 22, "stmt": [7,14,7,22] },
    { "module": "__main__", "line": 7, "column": 22, "endline": 7, "endcolumn": 22, "stmt": [7,14,7,22] },
    { "module": "__main__", "line": 7, "column": 14, "endline": 7, "endcolumn": 22, "stmt": [7,14,7,22] },
    { "module": "__main__", "line": 7, "column": 14, "endline": 7, "endcolumn": 21, "stmt": [7,14,7,22] },
    { "module": "__main__", "line": 7, "column": 14, "endline": 7, "endcolumn": 22, "stmt": [7,14,7,22] },
    { "module": "__main__", "line": 11, "column": 14, "endline": 11, "endcolumn": 22, "stmt": [11,14,11,22] },
    { "module": "__main__", "line": 11, "column": 14, "endline": 11, "endcolumn": 22, "stmt": [11,14,11,22] },
    { "module": "__main__", "line": 11, "column": 22, "endline": 11, "endcolumn": 22, "stmt": [11,14,11,22] },
    { "module": "__main__", "line": 11, "column": 14, "endline": 11, "endcolumn": 22, "stmt": [11,14,11,22] },
    { "module": "__main__", "line": 11, "column": 14, "endline": 11, "endcolumn": 21, "stmt": [11,14,11,22] },
    { "module": "__main__", "line": 11, "column": 14, "endline": 11, "endcolumn": 22, "stmt": [11,14,11,22] },
    { "module": "__main__", "line": 5, "column": 2, "endline": 5, "endcolumn": 29, "stmt": [5,2,5,29] },
    { "module": "__main__", "line": 4, "column": 1, "endline": 4, "endcolumn": 13, "stmt": [4,1,4,13] },
    { "module": "__main__", "line": 13, "column": 7, "endline": 13, "endcolumn": 12, "stmt": [13,1,13,14] },
    { "module": "__main__", "line": 13, "column": 13, "endline": 13, "endcolumn": 14, "stmt": [13,1,13,14] },
    { "module": "__main__", "line": 13, "column": 7, "endline": 13, "endcolumn": 14, "stmt": [13,1,13,14] },
    { "module": "__main__", "line": 13, "column": 1, "endline": 13, "endcolumn": 14, "stmt": [13,1,13,14] },
    { "module": "__main__", "line": 13, "column": 1, "endline": 13, "endcolumn": 14, "stmt": [13,1,13,14] },
    { "module": "__main__", "line": 14, "column": 7, "endline": 14, "endcolumn": 12, "stmt": [14,1,14,14] },
    { "module": "__main__", "line": 14, "column": 13, "endline": 14, "endcolumn": 14, "stmt": [14,1,14,14] },
    { "module": "__main__", "line": 14, "column": 7, "endline": 14, "endcolumn": 14, "stmt": [14,1,14,14] },
    { "module": "__main__", "line": 14, "column": 1, "endline": 14, "endcolumn": 14, "stmt": [14,1,14,14] },
    { "module": "__main__", "line": 14, "column": 1, "endline": 14, "endcolumn": 14, "stmt": [14,1,14,14] },
    { "module": "__main__", "line": 1, "column": 1, "endline": 15, "endcolumn": 7, "stmt": [1,1,15,7] },
    { "module": "__main__", "line": 1, "column": 1, "endline": 15, "endcolumn": 7, "stmt": [1,1,15,7] }
  ]
}
