{
  "nstates": 4,
  "issue": "No issues",
  "hvm": {
    "modules": {
        "__main__": {
            "file": "b_ary_fail.hny",
            "lines": [
                "wants = [False, False]",
                "turn = 1",
                "",
                "def dekk(p_q):",
                "    while choose({False,True}):",
                "        wants[p_q] = True",
                "        while wants[(p_q - 1) % 2]:",
                "            if turn == p_q:",
                "                wants[p_q] = False",
                "                await turn == 2",
                "                wants[p_q] = True",
                "        #critical",
                "        turn = 1",
                "        wants[p_q] = False",
                "        #remaind",
                "",
                "dekk(0)",
                "dekk(1)"
              ],
            "identifiers": {
                "dekk": "constant",
                "wants": "global",
                "this": "local-var",
                "turn": "global",
                "p_q": "local-const",
                "___": "___"
              }
          }
      },
    "labels": {
        "__end__": 71
      },
    "pretty": [
        [
            "Frame __init__()",
            "start of method __init__"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "Push False",
            "push constant False"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Push False",
            "push constant False"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Store wants",
            "pop a value and store it in shared variable wants"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "Store turn",
            "pop a value and store it in shared variable turn"
          ],
        [
            "Jump 63",
            "jump over method definition: set program counter to 63"
          ],
        [
            "Frame dekk(p_q)",
            "start of method dekk"
          ],
        [
            "Push {}",
            "push constant {}"
          ],
        [
            "Push False",
            "push constant False"
          ],
        [
            "2-ary SetAdd",
            "pop 2 values and push the result of applying SetAdd"
          ],
        [
            "Push True",
            "push constant True"
          ],
        [
            "2-ary SetAdd",
            "pop 2 values and push the result of applying SetAdd"
          ],
        [
            "Choose",
            "pop a set value and push one of its elements"
          ],
        [
            "JumpCond False 61",
            "pop a value and jump to 61 if the value is False"
          ],
        [
            "Push ?wants",
            "push constant ?wants"
          ],
        [
            "LoadVar p_q",
            "push the value of p_q"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Push True",
            "push constant True"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "Push ?wants",
            "push constant ?wants"
          ],
        [
            "LoadVar p_q",
            "push the value of p_q"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary -",
            "pop 2 values and push the result of applying -"
          ],
        [
            "Push 2",
            "push constant 2"
          ],
        [
            "2-ary %",
            "pop 2 values and push the result of applying %"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "JumpCond False 53",
            "pop a value and jump to 53 if the value is False"
          ],
        [
            "Load turn",
            "push value of shared variable turn"
          ],
        [
            "LoadVar p_q",
            "push the value of p_q"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "JumpCond False 23",
            "pop a value and jump to 23 if the value is False"
          ],
        [
            "Push ?wants",
            "push constant ?wants"
          ],
        [
            "LoadVar p_q",
            "push the value of p_q"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Push False",
            "push constant False"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "Load turn",
            "push value of shared variable turn"
          ],
        [
            "Push 2",
            "push constant 2"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "JumpCond False 41",
            "pop a value and jump to 41 if the value is False"
          ],
        [
            "Jump 47",
            "set program counter to 47"
          ],
        [
            "Jump 41",
            "set program counter to 41"
          ],
        [
            "Push ?wants",
            "push constant ?wants"
          ],
        [
            "LoadVar p_q",
            "push the value of p_q"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Push True",
            "push constant True"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "Jump 23",
            "set program counter to 23"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "Store turn",
            "pop a value and store it in shared variable turn"
          ],
        [
            "Push ?wants",
            "push constant ?wants"
          ],
        [
            "LoadVar p_q",
            "push the value of p_q"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Push False",
            "push constant False"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "Jump 11",
            "set program counter to 11"
          ],
        [
            "DelVar p_q",
            "delete method variable p_q"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Apply PC(10)",
            "call method PC(10)"
          ],
        [
            "Pop",
            "discard the top value on the stack"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "Apply PC(10)",
            "call method PC(10)"
          ],
        [
            "Pop",
            "discard the top value on the stack"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ]
      ],
    "locs": [
        {
            "module": "__main__",
            "endline": 19,
            "stmt": [
                1,
                1,
                19,
                7
              ],
            "line": 1,
            "endcolumn": 7,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 1,
            "stmt": [
                1,
                1,
                1,
                22
              ],
            "line": 1,
            "endcolumn": 21,
            "column": 10
          },
        {
            "module": "__main__",
            "endline": 1,
            "stmt": [
                1,
                1,
                1,
                22
              ],
            "line": 1,
            "endcolumn": 14,
            "column": 10
          },
        {
            "module": "__main__",
            "endline": 1,
            "stmt": [
                1,
                1,
                1,
                22
              ],
            "line": 1,
            "endcolumn": 21,
            "column": 10
          },
        {
            "module": "__main__",
            "endline": 1,
            "stmt": [
                1,
                1,
                1,
                22
              ],
            "line": 1,
            "endcolumn": 21,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 1,
            "stmt": [
                1,
                1,
                1,
                22
              ],
            "line": 1,
            "endcolumn": 21,
            "column": 10
          },
        {
            "module": "__main__",
            "endline": 1,
            "stmt": [
                1,
                1,
                1,
                22
              ],
            "line": 1,
            "endcolumn": 7,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 2,
            "stmt": [
                2,
                1,
                2,
                8
              ],
            "line": 2,
            "endcolumn": 8,
            "column": 8
          },
        {
            "module": "__main__",
            "endline": 2,
            "stmt": [
                2,
                1,
                2,
                8
              ],
            "line": 2,
            "endcolumn": 6,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                14
              ],
            "line": 4,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                14
              ],
            "line": 4,
            "endcolumn": 14,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 28,
            "column": 19
          },
        {
            "module": "__main__",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 23,
            "column": 19
          },
        {
            "module": "__main__",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 28,
            "column": 19
          },
        {
            "module": "__main__",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 28,
            "column": 25
          },
        {
            "module": "__main__",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 28,
            "column": 19
          },
        {
            "module": "__main__",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 30,
            "column": 11
          },
        {
            "module": "__main__",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 9,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 6,
            "stmt": [
                6,
                9,
                6,
                25
              ],
            "line": 6,
            "endcolumn": 13,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 6,
            "stmt": [
                6,
                9,
                6,
                25
              ],
            "line": 6,
            "endcolumn": 17,
            "column": 15
          },
        {
            "module": "__main__",
            "endline": 6,
            "stmt": [
                6,
                9,
                6,
                25
              ],
            "line": 6,
            "endcolumn": 18,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 6,
            "stmt": [
                6,
                9,
                6,
                25
              ],
            "line": 6,
            "endcolumn": 25,
            "column": 22
          },
        {
            "module": "__main__",
            "endline": 6,
            "stmt": [
                6,
                9,
                6,
                25
              ],
            "line": 6,
            "endcolumn": 20,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                9,
                7,
                35
              ],
            "line": 7,
            "endcolumn": 34,
            "column": 15
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                9,
                7,
                35
              ],
            "line": 7,
            "endcolumn": 24,
            "column": 22
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                9,
                7,
                35
              ],
            "line": 7,
            "endcolumn": 28,
            "column": 28
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                9,
                7,
                35
              ],
            "line": 7,
            "endcolumn": 28,
            "column": 22
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                9,
                7,
                35
              ],
            "line": 7,
            "endcolumn": 33,
            "column": 33
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                9,
                7,
                35
              ],
            "line": 7,
            "endcolumn": 33,
            "column": 21
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                9,
                7,
                35
              ],
            "line": 7,
            "endcolumn": 34,
            "column": 15
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                9,
                7,
                35
              ],
            "line": 7,
            "endcolumn": 34,
            "column": 15
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                9,
                7,
                35
              ],
            "line": 7,
            "endcolumn": 13,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 8,
            "stmt": [
                8,
                13,
                8,
                27
              ],
            "line": 8,
            "endcolumn": 19,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 8,
            "stmt": [
                8,
                13,
                8,
                27
              ],
            "line": 8,
            "endcolumn": 26,
            "column": 24
          },
        {
            "module": "__main__",
            "endline": 8,
            "stmt": [
                8,
                13,
                8,
                27
              ],
            "line": 8,
            "endcolumn": 26,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 8,
            "stmt": [
                8,
                13,
                8,
                27
              ],
            "line": 8,
            "endcolumn": 14,
            "column": 13
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                17,
                9,
                34
              ],
            "line": 9,
            "endcolumn": 21,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                17,
                9,
                34
              ],
            "line": 9,
            "endcolumn": 25,
            "column": 23
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                17,
                9,
                34
              ],
            "line": 9,
            "endcolumn": 26,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                17,
                9,
                34
              ],
            "line": 9,
            "endcolumn": 34,
            "column": 30
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                17,
                9,
                34
              ],
            "line": 9,
            "endcolumn": 28,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                17,
                10,
                31
              ],
            "line": 10,
            "endcolumn": 26,
            "column": 23
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                17,
                10,
                31
              ],
            "line": 10,
            "endcolumn": 31,
            "column": 31
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                17,
                10,
                31
              ],
            "line": 10,
            "endcolumn": 31,
            "column": 23
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                17,
                10,
                31
              ],
            "line": 10,
            "endcolumn": 31,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                17,
                10,
                31
              ],
            "line": 10,
            "endcolumn": 31,
            "column": 31
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                17,
                10,
                31
              ],
            "line": 10,
            "endcolumn": 31,
            "column": 31
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                17,
                11,
                33
              ],
            "line": 11,
            "endcolumn": 21,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                17,
                11,
                33
              ],
            "line": 11,
            "endcolumn": 25,
            "column": 23
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                17,
                11,
                33
              ],
            "line": 11,
            "endcolumn": 26,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                17,
                11,
                33
              ],
            "line": 11,
            "endcolumn": 33,
            "column": 30
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                17,
                11,
                33
              ],
            "line": 11,
            "endcolumn": 28,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                9,
                7,
                35
              ],
            "line": 7,
            "endcolumn": 35,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 13,
            "stmt": [
                13,
                9,
                13,
                16
              ],
            "line": 13,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 13,
            "stmt": [
                13,
                9,
                13,
                16
              ],
            "line": 13,
            "endcolumn": 14,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                26
              ],
            "line": 14,
            "endcolumn": 13,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                26
              ],
            "line": 14,
            "endcolumn": 17,
            "column": 15
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                26
              ],
            "line": 14,
            "endcolumn": 18,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                26
              ],
            "line": 14,
            "endcolumn": 26,
            "column": 22
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                9,
                14,
                26
              ],
            "line": 14,
            "endcolumn": 20,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 31,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                14
              ],
            "line": 4,
            "endcolumn": 14,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                14
              ],
            "line": 4,
            "endcolumn": 14,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                1,
                17,
                7
              ],
            "line": 17,
            "endcolumn": 6,
            "column": 6
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                1,
                17,
                7
              ],
            "line": 17,
            "endcolumn": 7,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                1,
                17,
                7
              ],
            "line": 17,
            "endcolumn": 7,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 18,
            "stmt": [
                18,
                1,
                18,
                7
              ],
            "line": 18,
            "endcolumn": 6,
            "column": 6
          },
        {
            "module": "__main__",
            "endline": 18,
            "stmt": [
                18,
                1,
                18,
                7
              ],
            "line": 18,
            "endcolumn": 7,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 18,
            "stmt": [
                18,
                1,
                18,
                7
              ],
            "line": 18,
            "endcolumn": 7,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 19,
            "stmt": [
                1,
                1,
                19,
                7
              ],
            "line": 1,
            "endcolumn": 7,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 19,
            "stmt": [
                1,
                1,
                19,
                7
              ],
            "line": 1,
            "endcolumn": 7,
            "column": 1
          }
      ],
    "code": [
        {
            "args": "()",
            "name": "__init__",
            "op": "Frame"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "bool",
                "value": "False"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "bool",
                "value": "False"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": [
                {
                    "type": "atom",
                    "value": "wants"
                  }
              ],
            "op": "Store"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "value": [
                {
                    "type": "atom",
                    "value": "turn"
                  }
              ],
            "op": "Store"
          },
        {
            "pc": "63",
            "op": "Jump"
          },
        {
            "args": "p_q",
            "name": "dekk",
            "op": "Frame"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "bool",
                "value": "False"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "SetAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "bool",
                "value": "True"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "SetAdd",
            "op": "Nary"
          },
        {
            "op": "Choose"
          },
        {
            "pc": "61",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "wants"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-1"
                  }
              },
            "op": "Push"
          },
        {
            "value": "p_q",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "bool",
                "value": "True"
              },
            "op": "Push"
          },
        {
            "op": "Store"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "wants"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-1"
                  }
              },
            "op": "Push"
          },
        {
            "value": "p_q",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "-",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 2
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "%",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "pc": "53",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": [
                {
                    "type": "atom",
                    "value": "turn"
                  }
              ],
            "op": "Load"
          },
        {
            "value": "p_q",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "pc": "23",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "wants"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-1"
                  }
              },
            "op": "Push"
          },
        {
            "value": "p_q",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "bool",
                "value": "False"
              },
            "op": "Push"
          },
        {
            "op": "Store"
          },
        {
            "value": [
                {
                    "type": "atom",
                    "value": "turn"
                  }
              ],
            "op": "Load"
          },
        {
            "value": {
                "type": "int",
                "value": 2
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "pc": "41",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "pc": "47",
            "op": "Jump"
          },
        {
            "pc": "41",
            "op": "Jump"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "wants"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-1"
                  }
              },
            "op": "Push"
          },
        {
            "value": "p_q",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "bool",
                "value": "True"
              },
            "op": "Push"
          },
        {
            "op": "Store"
          },
        {
            "pc": "23",
            "op": "Jump"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "value": [
                {
                    "type": "atom",
                    "value": "turn"
                  }
              ],
            "op": "Store"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "wants"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-1"
                  }
              },
            "op": "Push"
          },
        {
            "value": "p_q",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "bool",
                "value": "False"
              },
            "op": "Push"
          },
        {
            "op": "Store"
          },
        {
            "pc": "11",
            "op": "Jump"
          },
        {
            "value": "p_q",
            "op": "DelVar"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "pc",
                "value": "10"
              },
            "op": "Apply"
          },
        {
            "op": "Pop"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "pc",
                "value": "10"
              },
            "op": "Apply"
          },
        {
            "op": "Pop"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "value": "result",
            "op": "DelVar"
          }
      ]
  },
  "symbols": {

  },
  "nodes": [
    {
      "idx": 0,
      "transitions": [

      ],
      "type": "initial"
    }
  ],
  "profile": [
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    0
  ]
}
